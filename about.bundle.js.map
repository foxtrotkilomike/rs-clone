{"version":3,"file":"about.bundle.js","mappings":"mBAAA,MAKMA,EAAoBC,IACpBA,EAAEC,kBAAkBC,cAAgBF,EAAEC,QAAQE,QAAQ,oBACxDH,EAAEC,OAAOE,QAAQ,WAAWC,UAAUC,OAAO,U,ECN9CC,SAASC,cAAc,cAA8BC,YAAcC,OAAOC,aAAaC,UAAY,ODAjFL,SAASC,cAAc,iBAC9BK,iBAAiB,QAASb,GEFd,CAACc,IACzB,MAAMC,EAAoCR,SAASS,eAAeF,GAAoBG,iBACpF,mBAEIC,EAAwCX,SAASS,eAAeF,GAAoBG,iBACxF,uBAEF,IAAIE,EAAgB,GAEpBJ,EAAQK,SAAQC,GAAWA,EAAQR,iBAAiB,SAASZ,GAAKqB,EAAarB,OAC/E,MAOMqB,EAAgBrB,IACpBA,EAAEsB,iBACFR,EAAQK,SAAQC,GAAWA,EAAQhB,UAAUC,OAAO,eACpD,MAAMkB,EAAavB,EAAEC,OAAuBG,UAAUoB,SAAS,kBAC1DxB,EAAEC,OACFD,EAAEC,OAAuBE,QAAQ,mBAZX,IAACsB,EAa5BF,GAAWnB,UAAUsB,IAAI,aACzBT,EAAYE,SAAQC,GAAWA,EAAQhB,UAAUC,OAAO,eACxDa,EAAgBK,GAAWI,aAAa,iBAfZF,EAgBPP,EAfrBD,EAAYE,SAAQC,IAClBA,EAAQO,aAAa,sBAAwBF,EACzCL,EAAQhB,UAAUsB,IAAI,aACtBN,EAAQhB,UAAUC,OAAO,YAAY,GAYR,CACpC,ECpBHuB,CAAW,kB","sources":["webpack://my-webpack-project/./src/features/popup.ts","webpack://my-webpack-project/./src/helpers/manageUserName.ts","webpack://my-webpack-project/./src/features/tabs.ts","webpack://my-webpack-project/./src/pages/about/index.ts"],"sourcesContent":["const popupHandler = () => {\n  const underlayer = document.querySelector('.popup__body');\n  underlayer?.addEventListener('click', closeParentPopup);\n};\n\nconst closeParentPopup = (e: Event) => {\n  if (e.target instanceof HTMLElement && !e.target?.closest('.popup__content')) {\n    e.target.closest('.popup')?.classList.remove('is-open');\n  }\n};\n\nexport default popupHandler;\n","function getUserName() {\n  (document.querySelector('#user-name') as HTMLElement).textContent = window.localStorage.userName || 'User';\n}\n\nfunction setUserName(userName: string) {\n  window.localStorage.userName = userName;\n  (document.querySelector('#user-name') as HTMLElement).textContent = userName;\n}\n\nexport { getUserName, setUserName };\n","export const tabHandler = (id: string): void => {\n  const tabNavs: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-nav__item'\n  );\n  const tabContents: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-content__item'\n  );\n  let activeTabName = '';\n\n  tabNavs.forEach(element => element.addEventListener('click', e => setActiveTab(e)));\n  const showActiveTabContent = (tabname: string): void => {\n    tabContents.forEach(element => {\n      element.getAttribute('data-tab-content') === tabname\n        ? element.classList.add('is-active')\n        : element.classList.remove('is-active');\n    });\n  };\n  const setActiveTab = (e: Event): void => {\n    e.preventDefault();\n    tabNavs.forEach(element => element.classList.remove('is-active'));\n    const activeTab = (e.target as HTMLElement).classList.contains('tabs-nav__item')\n      ? (e.target as HTMLElement)\n      : (e.target as HTMLElement).closest('.tabs-nav__item');\n    activeTab?.classList.add('is-active');\n    tabContents.forEach(element => element.classList.remove('is-active'));\n    activeTabName = activeTab?.getAttribute('data-tab-name') as string;\n    showActiveTabContent(activeTabName);\n  };\n};\n","import '../../styles/main.scss';\nimport { tabHandler } from '../../features/tabs';\nimport { getUserName } from '../../helpers/manageUserName';\nimport popupHandler from '../../features/popup';\n\ngetUserName();\npopupHandler();\ntabHandler('forms-container');\n"],"names":["closeParentPopup","e","target","HTMLElement","closest","classList","remove","document","querySelector","textContent","window","localStorage","userName","addEventListener","id","tabNavs","getElementById","querySelectorAll","tabContents","activeTabName","forEach","element","setActiveTab","preventDefault","activeTab","contains","tabname","add","getAttribute","tabHandler"],"sourceRoot":""}