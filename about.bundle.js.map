{"version":3,"file":"about.bundle.js","mappings":"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","sources":["webpack://my-webpack-project/./src/helpers/manageUserName.ts","webpack://my-webpack-project/./src/features/popup.ts","webpack://my-webpack-project/./src/features/burgerMenu.ts","webpack://my-webpack-project/./src/config/api.config.js","webpack://my-webpack-project/./src/helpers/loginFormHandlers.ts","webpack://my-webpack-project/./src/pages/about/index.ts","webpack://my-webpack-project/./src/features/tabs.ts"],"sourcesContent":["function getUserName() {\n  (document.querySelector('#user-name') as HTMLElement).textContent = window.localStorage.userName || 'User';\n}\n\nfunction setUserName(userName: string) {\n  window.localStorage.userName = userName;\n  (document.querySelector('#user-name') as HTMLElement).textContent = userName;\n}\n\nexport { getUserName, setUserName };\n","const popupHandler = () => {\n  const underlayer = document.querySelector('.popup__body');\n  underlayer?.addEventListener('click', closeParentPopup);\n};\n\nconst closeParentPopup = (e: Event) => {\n  if (e.target instanceof HTMLElement && !e.target?.closest('.popup__content')) {\n    e.target.closest('.popup')?.classList.remove('is-open');\n  }\n};\n\nexport default popupHandler;\n","const burgerBtn = document.querySelector('.burger') as HTMLElement;\nconst menu = document.querySelector('.navbar__list') as HTMLElement;\nconst menuLinks = [...document.querySelectorAll('.nav__link')] as HTMLElement[];\n\nexport const burgerMenu = () => {\n  burgerBtn.addEventListener('click', () => {\n    burgerBtn.classList.toggle('burger_open');\n    menu.classList.toggle('navbar__list_open');\n    burgerBtn.classList.contains('burger_open') ? disableScroll() : enableScroll();\n  });\n\n  menuLinks.forEach((el: HTMLElement) => {\n    el.addEventListener('click', () => {\n      burgerBtn.classList.remove('burger_open');\n      menu.classList.remove('navbar__list_open');\n      enableScroll();\n    });\n  });\n};\n\nfunction disableScroll() {\n  document.body.style.overflow = 'hidden';\n  document.body.style.userSelect = 'none';\n}\n\nfunction enableScroll() {\n  document.body.style.overflow = 'auto';\n  document.body.style.userSelect = 'auto';\n}\n","const BASE_URL = 'https://rs-recipes-server.herokuapp.com';\n\nconst ENDPOINTS = {\n  recipes: '/recipes',\n  recipesDistinctProps: '/recipes/distinct',\n  articles: '/articles',\n  userRegister: '/user/register',\n  userLogin: '/user/login',\n  userLogout: '/user/logout',\n  userProfile: '/user/profile',\n  userUpdate: '/user/update',\n};\n\nexport { BASE_URL, ENDPOINTS };\n","import { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\nimport { setUserName } from './manageUserName';\n\nfunction setLocalUser(response: IUserResponse) {\n  window.localStorage.setItem('user', JSON.stringify(response));\n}\n\nfunction addUserButtonListener() {\n  const userProfileButton = document.querySelector('.profile-btn') as HTMLButtonElement;\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  userProfileButton.addEventListener('click', async () => {\n    const tokenValue = localStorage.getItem('token');\n\n    if (tokenValue) {\n      const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n        credentials: 'include',\n      })) as IUserResponse;\n      if (response.status === 200) {\n        const responseBody = (await response.json()) as IUserResponse;\n        setLocalUser(responseBody);\n        window.open('./user-page.html', '_self');\n      } else {\n        signupForm.classList.add('is-open');\n      }\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  });\n}\n\nfunction addRegisterFormListener() {\n  const form = document.forms[1] as HTMLFormElement;\n  form.addEventListener('submit', handleRegistrationForm);\n}\n\nfunction addSignInFormListener() {\n  const form = document.forms[0] as HTMLFormElement;\n  form.addEventListener('submit', handleLoginForm);\n}\n\nasync function handleRegistrationForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeRegistrationForm(event.target as HTMLFormElement);\n\n  if (formData !== undefined) {\n    const response = await sendUserData(formData, ENDPOINTS.userRegister);\n    if (response.status === 400) {\n      (formElement.querySelector('#user-exist') as HTMLElement).classList.remove('hidden');\n    } else {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Registered successfully!');\n      localStorage.setItem('token', 'true');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nasync function handleLoginForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeLoginForm(event.target as HTMLFormElement);\n\n  const response = await sendUserData(formData, ENDPOINTS.userLogin);\n  switch (response.status) {\n    case 401:\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.add('hidden');\n      break;\n    case 404:\n    case 500:\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.add('hidden');\n      break;\n    case 200: {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Logged in successfully!');\n      localStorage.setItem('token', 'true');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nfunction serializeRegistrationForm(formNode: HTMLFormElement): FormData | undefined {\n  const password = formNode.password.value;\n  const passwordConfirm = formNode['password-confirm'].value;\n  if (password !== passwordConfirm) {\n    (formNode.querySelector('#password-mismatch') as HTMLElement).classList.remove('hidden');\n  } else {\n    (formNode.querySelector('#password-mismatch') as HTMLFormElement).classList.add('hidden');\n    (formNode.querySelector('#user-exist') as HTMLFormElement).classList.add('hidden');\n    return new FormData(formNode);\n  }\n}\n\nfunction serializeLoginForm(formNode: HTMLFormElement): FormData {\n  return new FormData(formNode);\n}\n\nasync function sendUserData(data: FormData, endpoint: string): Promise<IUserResponse> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(Object.fromEntries(data.entries())),\n  })) as IUserResponse;\n}\n\nexport { addUserButtonListener, addRegisterFormListener, addSignInFormListener };\n","import '../../styles/main.scss';\nimport { tabHandler } from '../../features/tabs';\nimport { getUserName } from '../../helpers/manageUserName';\nimport popupHandler from '../../features/popup';\nimport { burgerMenu } from '../../features/burgerMenu';\nimport * as formHandler from '../../helpers/loginFormHandlers';\n\nburgerMenu();\ngetUserName();\npopupHandler();\nformHandler.addUserButtonListener();\nformHandler.addRegisterFormListener();\nformHandler.addSignInFormListener();\ntabHandler('forms-container');\n","export const tabHandler = (id: string): void => {\n  const tabNavs: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-nav__item'\n  );\n  const tabContents: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-content__item'\n  );\n  let activeTabName = '';\n\n  tabNavs.forEach(element => element.addEventListener('click', e => setActiveTab(e)));\n  const showActiveTabContent = (tabname: string): void => {\n    tabContents.forEach(element => {\n      element.getAttribute('data-tab-content') === tabname\n        ? element.classList.add('is-active')\n        : element.classList.remove('is-active');\n    });\n  };\n  const setActiveTab = (e: Event): void => {\n    e.preventDefault();\n    tabNavs.forEach(element => element.classList.remove('is-active'));\n    const activeTab = (e.target as HTMLElement).classList.contains('tabs-nav__item')\n      ? (e.target as HTMLElement)\n      : (e.target as HTMLElement).closest('.tabs-nav__item');\n    activeTab?.classList.add('is-active');\n    tabContents.forEach(element => element.classList.remove('is-active'));\n    activeTabName = activeTab?.getAttribute('data-tab-name') as string;\n    showActiveTabContent(activeTabName);\n  };\n};\n"],"names":["setUserName","userName","window","localStorage","document","querySelector","textContent","closeParentPopup","e","target","HTMLElement","closest","classList","remove","burgerBtn","menu","menuLinks","querySelectorAll","enableScroll","body","style","overflow","userSelect","BASE_URL","setLocalUser","response","setItem","JSON","stringify","async","sendUserData","data","endpoint","fetch","method","headers","credentials","Object","fromEntries","entries","addEventListener","toggle","contains","forEach","el","userProfileButton","signupForm","getItem","status","json","open","add","forms","event","preventDefault","formElement","formData","formNode","password","value","FormData","serializeRegistrationForm","undefined","alert","reset","responseBody","name","id","tabNavs","getElementById","tabContents","activeTabName","element","setActiveTab","activeTab","tabname","getAttribute","tabHandler"],"sourceRoot":""}