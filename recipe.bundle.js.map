{"version":3,"file":"recipe.bundle.js","mappings":"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","sources":["webpack://my-webpack-project/./src/features/burgerMenu.ts","webpack://my-webpack-project/./src/helpers/createElementWithClass.ts","webpack://my-webpack-project/./src/helpers/round.ts","webpack://my-webpack-project/./src/pages/recipe/render.ts","webpack://my-webpack-project/./src/config/api.config.js","webpack://my-webpack-project/./src/features/cardButtonsHandler.ts","webpack://my-webpack-project/./src/api/userService.ts","webpack://my-webpack-project/./src/helpers/manageUserName.ts","webpack://my-webpack-project/./src/helpers/loginFormHandlers.ts","webpack://my-webpack-project/./src/pages/recipe/controller.ts","webpack://my-webpack-project/./src/helpers/getCookieValue.ts","webpack://my-webpack-project/./src/pages/recipe/index.ts","webpack://my-webpack-project/./src/api/recipesService.ts","webpack://my-webpack-project/./src/helpers/checkItemInUserLists.ts"],"sourcesContent":["const burgerBtn = document.querySelector('.burger') as HTMLElement;\nconst menu = document.querySelector('.navbar__list') as HTMLElement;\nconst menuLinks = [...document.querySelectorAll('.nav__link')] as HTMLElement[];\n\nexport const burgerMenu = () => {\n  burgerBtn.addEventListener('click', () => {\n    burgerBtn.classList.toggle('burger_open');\n    menu.classList.toggle('navbar__list_open');\n  });\n\n  menuLinks.forEach((el: HTMLElement) => {\n    el.addEventListener('click', () => {\n      burgerBtn.classList.remove('burger_open');\n      menu.classList.remove('navbar__list_open');\n    });\n  });\n};\n","function createElemWithClass(tagName: string, ...classNames: string[]): HTMLElement {\n  const createdElement = document.createElement(tagName);\n  createdElement.classList.add(...classNames);\n\n  return createdElement;\n}\n\nexport default createElemWithClass;\n","const round = (number: number) => Math.round(number);\n\nexport default round;\n","import { ILoadRecipePage, IIngredientMeta, INutrient, IUserResponse } from '../../types';\nimport createElementWithClass from '../../helpers/createElementWithClass';\nimport infoSvg from '../../assets/svg/info-circle.svg';\nimport round from '../../helpers/round';\nimport checkItemInUserLists from '../../helpers/checkItemInUserLists';\n\nconst PRICE_COEFFICIENT = 100;\n\nfunction renderRecipe(recipeData: ILoadRecipePage, equipmentList: string[] | undefined) {\n  const main = document.querySelector('#main') as HTMLElement;\n  const recipeContainer = createElementWithClass('section', 'recipe');\n\n  const list = renderIngredientsList(recipeData.extendedIngredients);\n  const nutrients = renderNutrients(recipeData.nutrition.nutrients);\n  const categories = renderList(recipeData.diets, 'category__item');\n  const equipment = renderList(equipmentList, 'equipment__item');\n  const servingCost = (recipeData.pricePerServing / PRICE_COEFFICIENT).toFixed(2);\n\n  recipeContainer.innerHTML = `\n    <div class=\"container\">\n      <h1 class=\"recipe__title\">${recipeData.title}</h1>\n      <div class=\"recipe__content\">\n        <div class=\"recipe__consist\">\n          <div class=\"recipe__ingredients\">\n            <div class=\"ingredients__header\">\n              <h3 class=\"ingredients__title\">Ingredients</h3>\n              <button class=\"ingredients__btn btn-reset\" id=\"less-ingredients\">-</button>\n              <span class=\"ingredients__amount\">${recipeData.servings}</span>\n              <button class=\"ingredients__btn btn-reset\" id=\"more-ingredients\">+</button>\n            </div>\n            <ul class=\"ingredients__list list-reset\">\n              ${list.innerHTML}\n            </ul>\n            <button class=\"btn-active btn-reset\">Add to my shopping list</button>\n          </div>\n          ${nutrients}\n        </div>\n        <div class=\"recipe__descr\">\n          <img class=\"recipe__img\" src=${recipeData.image} alt=${recipeData.title}>\n          <div class=\"recipe__info\">\n            <img class=\"info-icon\" src=${infoSvg} alt=\"\">\n            <div class=\"info__main\">\n              <ul class=\"info__numbers list-reset\">\n                <li class=\"number__item\">Cooking time:&nbsp; <span class=\"number_time\">\n                  ${recipeData.readyInMinutes} min</span>\n                </li>\n                <li class=\"number__item\">Servings:&nbsp; <span class=\"number_servings\">\n                  ${recipeData.servings}</span>\n                </li>\n                <li class=\"number__item\">Price per serving:&nbsp; <span class=\"number_price\">$\n                  ${servingCost}\n                </span></li>\n                <li class=\"number__item\">Health score:&nbsp; <span class=\"number_health\">\n                  ${recipeData.healthScore}\n                </span></li>\n              </ul>\n              <ul class=\"info__categories list-reset\">\n                ${categories?.innerHTML}\n              </ul>\n            </div>\n            <div class=\"info__equipment\">\n              <span class=\"equipment__text\">Equipment:</span>\n              <ul class=\"equipment__list list-reset\">\n                ${equipment?.innerHTML || 'No equipment'}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n\n  main.appendChild(recipeContainer);\n}\n\nfunction renderInstructions(instructions: string[], recipeId: string, userObject: IUserResponse) {\n  const main = document.querySelector('#main') as HTMLElement;\n  const instructionsContainer = createElementWithClass('section', 'instruction');\n\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'recipes', recipeId);\n\n  const instructionsList = renderList(instructions, 'instruction__item');\n\n  instructionsContainer.innerHTML = `\n    <div class=\"container recipe-container\" id=${recipeId}>\n      <h3 class=\"instruction__title\">Instructions</h3>\n      <ol class=\"instruction__list\">\n        ${instructionsList?.innerHTML}\n      </ol>\n      <div class=\"instruction__btns\">\n        <button class=\"instruction__btn_favorite btn-active btn-reset favorite-btn\">Add to favorite recipes</button>\n        <button class=\"instruction__btn_save btn-active btn-reset save-btn\">Save for later</button>\n      </div>\n    </div>\n  `;\n\n  if (isInSavedList) {\n    (instructionsContainer.querySelector('.instruction__btn_save') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (instructionsContainer.querySelector('.instruction__btn_favorite') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  main.appendChild(instructionsContainer);\n}\n\nfunction renderIngredientsList(ingredientsList: IIngredientMeta[]): HTMLElement {\n  const instructionsList = document.createElement('div');\n\n  const ingredients = ingredientsList.map((indredient, index) => {\n    const listItem = createElementWithClass('li', 'ingredients__item');\n    listItem.innerHTML = `\n      <input type=\"checkbox\" id=\"ingredient${index}\" name=\"ingredient${index}\">\n      <label for=\"ingredient${index}\">${indredient.original}</label>\n    `;\n\n    return listItem;\n  });\n\n  instructionsList.append(...ingredients);\n  return instructionsList;\n}\n\nfunction renderNutrients(nutrients: INutrient[]): string {\n  return `\n  <div class=\"nutrients recipe__nutrients\">\n    <div class=\"nutrients__item\">\n      <p>Calories</p>\n      <p class=\"nutrients__calories\">${round(nutrients[0].amount)}</p>\n    </div>\n    <div class=\"nutrients__item\">\n      <p>Protein</p>\n      <p class=\"nutrients__protein\">${round(nutrients[8].amount)}g</p>\n    </div>\n    <div class=\"nutrients__item\">\n      <p>Fat</p>\n      <p class=\"nutrients__fat\">${round(nutrients[1].amount)}g</p>\n    </div>\n  </div>\n  `;\n}\n\nfunction renderList(listItems: string[] | undefined, listItemClass: string): HTMLElement | null {\n  if (listItems === undefined) return null;\n\n  const list = document.createElement('div');\n\n  const categories = listItems.map(item => {\n    const listItem = createElementWithClass('li', listItemClass);\n    listItem.innerHTML = item;\n\n    return listItem;\n  });\n\n  list.append(...categories);\n  return list;\n}\n\nexport { renderRecipe, renderInstructions, renderList };\n","const BASE_URL = 'https://rs-recipes-server.herokuapp.com';\n\nconst ENDPOINTS = {\n  recipes: '/recipes',\n  recipesDistinctProps: '/recipes/distinct',\n  articles: '/articles',\n  userRegister: '/user/register',\n  userLogin: '/user/login',\n  userLogout: '/user/logout',\n  userProfile: '/user/profile',\n  userUpdate: '/user/update',\n};\n\nexport { BASE_URL, ENDPOINTS };\n","import { IUserResponse } from '../types';\nimport * as userService from '../api/userService';\nimport { ENDPOINTS } from '../config/api.config';\n\nfunction handleSaveFavoriteButtons(cardElement: Element, cardCategory: 'articles' | 'recipes') {\n  const saveButton = cardElement.querySelector('.save-btn') as HTMLButtonElement;\n  const favoriteButton = cardElement.querySelector('.favorite-btn') as HTMLButtonElement;\n\n  saveButton.addEventListener('click', (e: Event) => {\n    const targetButton = e.target as HTMLButtonElement;\n    targetButton.classList.toggle('is-active');\n    const userObject = JSON.parse(localStorage.getItem('user') || 'null');\n    if (userObject) updateUserResources(userObject, cardElement, targetButton, cardCategory, 'saved');\n  });\n\n  favoriteButton.addEventListener('click', (e: Event) => {\n    const targetButton = e.target as HTMLButtonElement;\n    targetButton.classList.toggle('is-active');\n    const userObject = JSON.parse(localStorage.getItem('user') || 'null');\n    if (userObject) updateUserResources(userObject, cardElement, targetButton, cardCategory, 'favorite');\n  });\n}\n\nfunction updateUserResources(\n  userObject: IUserResponse,\n  cardElement: Element,\n  eventTarget: HTMLButtonElement,\n  cardName: 'articles' | 'recipes',\n  cardCategory: 'saved' | 'favorite'\n) {\n  if (eventTarget.classList.contains('is-active')) {\n    userObject[cardName][cardCategory].push(cardElement.id);\n  } else {\n    userObject[cardName][cardCategory] = userObject[cardName][cardCategory].filter(\n      resourceId => resourceId !== cardElement.id\n    );\n  }\n  userService.sendUserData(userObject, ENDPOINTS.userUpdate);\n  localStorage.setItem('user', JSON.stringify(userObject));\n}\n\nexport { handleSaveFavoriteButtons, updateUserResources };\n","import getCookieValue from '../helpers/getCookieValue';\nimport { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\n\nconst getUserData = async (): Promise<IUserResponse | undefined> => {\n  const tokenValue = getCookieValue('token');\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  if (tokenValue) {\n    const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n      credentials: 'include',\n    })) as IUserResponse;\n    if (response.status === 200) {\n      return (await response.json()) as IUserResponse;\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  } else {\n    signupForm.classList.add('is-open');\n  }\n};\n\nasync function sendUserData(data: IUserResponse, endpoint: string): Promise<Response> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(data),\n  })) as IUserResponse;\n}\n\nasync function logOut() {\n  const response = (await fetch(`${BASE_URL}${ENDPOINTS.userLogout}`, {\n    credentials: 'include',\n  })) as Response;\n  if (response.status === 204) {\n    localStorage.removeItem('userName');\n    window.open('./index.html', '_self');\n  }\n}\n\nexport { getUserData, sendUserData, logOut };\n","function getUserName() {\n  (document.querySelector('#user-name') as HTMLElement).textContent = window.localStorage.userName || 'User';\n}\n\nfunction setUserName(userName: string) {\n  window.localStorage.userName = userName;\n  (document.querySelector('#user-name') as HTMLElement).textContent = userName;\n}\n\nexport { getUserName, setUserName };\n","import getCookieValue from './getCookieValue';\nimport { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\nimport { setUserName } from './manageUserName';\n\nfunction setLocalUser(response: IUserResponse) {\n  window.localStorage.setItem('user', JSON.stringify(response));\n}\n\nfunction addUserButtonListener() {\n  const userProfileButton = document.querySelector('.profile-btn') as HTMLButtonElement;\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  userProfileButton.addEventListener('click', async () => {\n    const tokenValue = getCookieValue('token');\n\n    if (tokenValue) {\n      const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n        credentials: 'include',\n      })) as IUserResponse;\n      if (response.status === 200) {\n        const responseBody = (await response.json()) as IUserResponse;\n        setLocalUser(responseBody);\n        window.open('./user-page.html', '_self');\n      } else {\n        signupForm.classList.add('is-open');\n      }\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  });\n}\n\nfunction addRegisterFormListener() {\n  const form = document.forms[1] as HTMLFormElement;\n  form.addEventListener('submit', handleRegistrationForm);\n}\n\nfunction addSignInFormListener() {\n  const form = document.forms[0] as HTMLFormElement;\n  form.addEventListener('submit', handleLoginForm);\n}\n\nasync function handleRegistrationForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeRegistrationForm(event.target as HTMLFormElement);\n\n  if (formData !== undefined) {\n    const response = await sendUserData(formData, ENDPOINTS.userRegister);\n    if (response.status === 400) {\n      (formElement.querySelector('#user-exist') as HTMLElement).classList.remove('hidden');\n    } else {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Registered successfully!');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nasync function handleLoginForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeLoginForm(event.target as HTMLFormElement);\n\n  const response = await sendUserData(formData, ENDPOINTS.userLogin);\n  switch (response.status) {\n    case 401:\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.add('hidden');\n      break;\n    case 404:\n    case 500:\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.add('hidden');\n      break;\n    case 200: {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Logged in successfully!');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nfunction serializeRegistrationForm(formNode: HTMLFormElement): FormData | undefined {\n  const password = formNode.password.value;\n  const passwordConfirm = formNode['password-confirm'].value;\n  if (password !== passwordConfirm) {\n    (formNode.querySelector('#password-mismatch') as HTMLElement).classList.remove('hidden');\n  } else {\n    (formNode.querySelector('#password-mismatch') as HTMLFormElement).classList.add('hidden');\n    (formNode.querySelector('#user-exist') as HTMLFormElement).classList.add('hidden');\n    return new FormData(formNode);\n  }\n}\n\nfunction serializeLoginForm(formNode: HTMLFormElement): FormData {\n  return new FormData(formNode);\n}\n\nasync function sendUserData(data: FormData, endpoint: string): Promise<IUserResponse> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(Object.fromEntries(data.entries())),\n  })) as IUserResponse;\n}\n\nexport { addUserButtonListener, addRegisterFormListener, addSignInFormListener };\n","import { renderRecipe, renderInstructions } from './render';\nimport * as recipesSerivice from '../../api/recipesService';\nimport { IInstructions } from '../../types';\nimport { handleSaveFavoriteButtons } from '../../features/cardButtonsHandler';\nimport * as formHandler from '../../helpers/loginFormHandlers';\n\nconst userObject = JSON.parse(localStorage.getItem('user') || 'null');\n\nasync function loadRecipe(recipeId: string) {\n  const recipeData = await recipesSerivice.getRecipeById(recipeId);\n  const equipmentList = parseEquipmentList(recipeData.analyzedInstructions[0]);\n  const instructionsList = parseInstructionsList(recipeData.analyzedInstructions[0]);\n  renderRecipe(recipeData, equipmentList);\n  if (instructionsList) renderInstructions(instructionsList, recipeId, userObject);\n}\n\nfunction parseEquipmentList(instructions: IInstructions | undefined): string[] | undefined {\n  if (!instructions) return undefined;\n\n  const stepsEquipment = instructions.steps.map(step => step.equipment.map(equipmentItem => equipmentItem.name));\n\n  return [...new Set(stepsEquipment.flat(1))];\n}\n\nfunction parseInstructionsList(instructions: IInstructions | undefined): string[] | undefined {\n  return instructions?.steps.map(step => step.step);\n}\n\nfunction addListeners() {\n  addRecipeButtonsListeners();\n  formHandler.addUserButtonListener();\n  formHandler.addRegisterFormListener();\n  formHandler.addSignInFormListener();\n}\n\nfunction addRecipeButtonsListeners() {\n  const recipeButtonsContainer = document.querySelector('.recipe-container') as HTMLElement;\n  handleSaveFavoriteButtons(recipeButtonsContainer, 'recipes');\n}\n\nexport { loadRecipe, addListeners };\n","function getCookieValue(cookieKey: string) {\n  return document.cookie\n    .split('; ')\n    .find(cookie => cookie.startsWith(`${cookieKey}=`))\n    ?.split('=')[1];\n}\n\nexport default getCookieValue;\n","import { burgerMenu } from '../../features/burgerMenu';\nimport '../../styles/main.scss';\nimport * as Controller from './controller';\nimport { getUserName } from '../../helpers/manageUserName';\n\nburgerMenu();\nconst queryString = window.location.search;\nconst params = new URLSearchParams(queryString);\nconst recipeId = params.get('id') as string;\n\nController.loadRecipe(recipeId).then(() => Controller.addListeners());\ngetUserName();\n","import { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IRecipe, IRecipeQueryOptions } from '../types';\n\nimport transformOptionsToQueryString from '../helpers/transformOptionsToQueryString';\n\nconst getRecipes = async (queryOptions?: IRecipeQueryOptions): Promise<IRecipe[]> => {\n  let queryString = '';\n\n  if (queryOptions && Object.keys(queryOptions).length !== 0) {\n    queryString = transformOptionsToQueryString(queryOptions as IRecipeQueryOptions);\n  }\n\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/${queryString}`);\n\n  return ((await response.json()) as unknown) as IRecipe[];\n};\n\nconst getRecipeById = async (recipeId: string): Promise<IRecipe> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/${recipeId}`);\n\n  return ((await response.json()) as unknown) as IRecipe;\n};\n\nconst getDistinctProps = async (recipePath: string): Promise<string[] | number[]> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/distinct/${recipePath}`);\n\n  return ((await response.json()) as unknown) as string[] | number[];\n};\n\nexport { getRecipes, getRecipeById, getDistinctProps };\n","import { IUserResponse } from '../types';\n\nfunction checkItemInUserLists(userObject: IUserResponse | null, listName: 'recipes' | 'articles', itemId: string) {\n  if (!userObject) return [false, false];\n\n  const isInSavedList = userObject[listName].saved.find(id => id === itemId);\n  const isInFavoritesList = userObject[listName].favorite.find(id => id === itemId);\n\n  return [!!isInSavedList, !!isInFavoritesList];\n}\n\nexport default checkItemInUserLists;\n"],"names":["burgerBtn","document","querySelector","menu","menuLinks","querySelectorAll","tagName","classNames","createdElement","createElement","classList","add","number","Math","round","renderList","listItems","listItemClass","undefined","list","categories","map","item","listItem","createElementWithClass","innerHTML","append","updateUserResources","userObject","cardElement","eventTarget","cardName","cardCategory","contains","push","id","filter","resourceId","async","data","endpoint","fetch","method","headers","credentials","body","JSON","stringify","localStorage","setItem","setUserName","userName","window","textContent","setLocalUser","response","handleRegistrationForm","event","preventDefault","formElement","target","formData","formNode","password","value","FormData","remove","serializeRegistrationForm","status","alert","reset","responseBody","json","name","handleLoginForm","Object","fromEntries","entries","parse","getItem","addListeners","saveButton","favoriteButton","addEventListener","e","targetButton","toggle","handleSaveFavoriteButtons","userProfileButton","signupForm","cookieKey","cookie","split","find","startsWith","open","forms","forEach","el","queryString","location","search","recipeId","recipeData","equipmentList","instructions","stepsEquipment","steps","step","equipment","equipmentItem","Set","flat","parseEquipmentList","analyzedInstructions","instructionsList","main","recipeContainer","ingredientsList","ingredients","indredient","index","original","renderIngredientsList","extendedIngredients","nutrients","amount","renderNutrients","nutrition","diets","servingCost","pricePerServing","toFixed","title","servings","image","readyInMinutes","healthScore","appendChild","renderRecipe","instructionsContainer","isInSavedList","isInFavoritesList","listName","itemId","saved","favorite","renderInstructions","URLSearchParams","get","then"],"sourceRoot":""}