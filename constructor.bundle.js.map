{"version":3,"file":"constructor.bundle.js","mappings":"mBAAA,MAAMA,EAAYC,SAASC,cAAc,WACnCC,EAAOF,SAASC,cAAc,iBAC9BE,EAAY,IAAIH,SAASI,iBAAiB,eAuBhD,SAASC,IACPL,SAASM,KAAKC,MAAMC,SAAW,OAC/BR,SAASM,KAAKC,MAAME,WAAa,MACnC,CC5BO,MAAMC,EAAmB,CAC9B,iBACA,8BACA,WACA,iBACA,cACA,cACA,UACA,QACA,aACA,yBACA,qBACA,gBACA,YACA,UACA,eACA,yBACA,aACA,gBACA,cACA,mBACA,SACA,aACA,OACA,qBACA,aACA,aACA,cACA,UACA,mBACA,cACA,eACA,cACA,2BACA,mCACA,yBACA,OACA,cACA,WACA,mBACA,SACA,aACA,qBACA,uBACA,UACA,eACA,iBACA,iBACA,sBACA,gCACA,aACA,qBACA,wBACA,sBACA,wBACA,sBACA,qBACA,iBACA,sBACA,kBACA,qBACA,gBACA,gBACA,SACA,cACA,SACA,cACA,cACA,gBACA,iBACA,SACA,WACA,gBACA,aACA,iBACA,gBACA,kBACA,gBACA,gBACA,eACA,eACA,SACA,wBACA,4BACA,WACA,WACA,cACA,kBACA,aACA,UACA,gBACA,eACA,cACA,kCACA,mCACA,eACA,wBACA,gBACA,cACA,qBACA,cACA,OACA,eACA,cACA,aACA,sBACA,WACA,iBACA,QACA,eACA,kBACA,uBACA,iBACA,oBACA,mBACA,QACA,mBACA,iBACA,qBACA,kBACA,YACA,oCACA,OACA,0BACA,oBACA,cACA,gBACA,qBACA,cACA,YACA,MACA,cACA,aACA,WACA,iBACA,iBACA,kBACA,kBACA,yBACA,wBACA,gBACA,cACA,cACA,0BACA,wBACA,iBACA,iBACA,4BACA,cACA,kBACA,SACA,gBACA,UACA,SACA,gBACA,yCACA,cACA,qBACA,aACA,QACA,wBACA,kBACA,eACA,eACA,cACA,qBACA,wBACA,eACA,gBACA,wBACA,eACA,kBACA,eACA,mBACA,kBACA,sBACA,UACA,gBACA,MACA,UACA,UACA,YACA,wCACA,oBACA,wBACA,QACA,YACA,MACA,QACA,iBACA,iBACA,0BACA,8BACA,kBACA,oBACA,iBACA,kBACA,cACA,kBACA,aACA,OACA,QACA,cACA,aACA,kBACA,OACA,aACA,YACA,kBACA,2BACA,2BACA,yBACA,gBACA,iBACA,gBACA,kBACA,cACA,uBACA,aACA,gBACA,UACA,OACA,iBACA,uBACA,eACA,OACA,OACA,WACA,uBACA,aACA,iBACA,SACA,WACA,YACA,QACA,eACA,eACA,cACA,UACA,eACA,OACA,aACA,WACA,QACA,WACA,UACA,gBACA,mBACA,SACA,kBACA,qBACA,YACA,UACA,mBACA,cACA,oBACA,YACA,kBACA,cACA,iBACA,cACA,qBACA,eACA,cACA,YACA,eACA,uBACA,SACA,iBACA,YACA,oBACA,oBACA,QACA,qBACA,SACA,UACA,iBACA,YACA,aACA,oBACA,2BACA,gBACA,8BACA,yBACA,OACA,iBACA,sBACA,cACA,YACA,iBACA,gBACA,OACA,SACA,kBACA,gBACA,UACA,gBACA,iBACA,oBACA,sBACA,4BACA,iBACA,UACA,uBACA,SACA,oBACA,aACA,0BACA,kBACA,sBACA,cACA,iBACA,aACA,qBACA,UACA,kBACA,kBACA,UACA,qBACA,gBACA,WACA,eACA,UACA,QACA,qBACA,kBACA,eACA,2BACA,cACA,eACA,aACA,cACA,iBACA,WACA,MACA,gBACA,QACA,SACA,eACA,eACA,kBACA,+BACA,mBACA,kBACA,sBACA,+BACA,kBACA,gBACA,iBACA,iBACA,kBACA,UACA,QACA,cACA,kBACA,iBACA,cACA,wBACA,cACA,eACA,eACA,0BACA,qBACA,gBACA,oBACA,eACA,oBACA,2BACA,uBACA,eACA,SACA,oBACA,YChXF,SAASC,EAAYC,GACnBC,OAAOC,aAAaF,SAAWA,EAC9BZ,SAASC,cAAc,cAA8Bc,YAAcH,CACtE,CCPO,MCKDI,EAAoBC,IACpBA,EAAEC,kBAAkBC,cAAgBF,EAAEC,QAAQE,QAAQ,oBACxDH,EAAEC,OAAOE,QAAQ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","sources":["webpack://my-webpack-project/./src/features/burgerMenu.ts","webpack://my-webpack-project/./src/constants.ts","webpack://my-webpack-project/./src/helpers/manageUserName.ts","webpack://my-webpack-project/./src/features/tabs.ts","webpack://my-webpack-project/./src/features/popup.ts","webpack://my-webpack-project/./src/helpers/createElementWithClass.ts","webpack://my-webpack-project/./src/config/api.config.js","webpack://my-webpack-project/./src/helpers/loginFormHandlers.ts","webpack://my-webpack-project/./src/features/loadCards.ts","webpack://my-webpack-project/./src/api/recipesService.ts","webpack://my-webpack-project/./src/helpers/transformOptionsToQueryString.ts","webpack://my-webpack-project/./src/helpers/checkItemInUserLists.ts","webpack://my-webpack-project/./src/features/cardButtonsHandler.ts","webpack://my-webpack-project/./src/api/userService.ts","webpack://my-webpack-project/./src/pages/constructor/controller.ts","webpack://my-webpack-project/./src/pages/constructor/config.ts","webpack://my-webpack-project/./src/pages/constructor/index.ts","webpack://my-webpack-project/./src/features/renderCards.ts","webpack://my-webpack-project/./src/helpers/capitalize.ts"],"sourcesContent":["const burgerBtn = document.querySelector('.burger') as HTMLElement;\nconst menu = document.querySelector('.navbar__list') as HTMLElement;\nconst menuLinks = [...document.querySelectorAll('.nav__link')] as HTMLElement[];\n\nexport const burgerMenu = () => {\n  burgerBtn.addEventListener('click', () => {\n    burgerBtn.classList.toggle('burger_open');\n    menu.classList.toggle('navbar__list_open');\n    burgerBtn.classList.contains('burger_open') ? disableScroll() : enableScroll();\n  });\n\n  menuLinks.forEach((el: HTMLElement) => {\n    el.addEventListener('click', () => {\n      burgerBtn.classList.remove('burger_open');\n      menu.classList.remove('navbar__list_open');\n      enableScroll();\n    });\n  });\n};\n\nfunction disableScroll() {\n  document.body.style.overflow = 'hidden';\n  document.body.style.userSelect = 'none';\n}\n\nfunction enableScroll() {\n  document.body.style.overflow = 'auto';\n  document.body.style.userSelect = 'auto';\n}\n","export const MOCK_INGREDIENTS = [\n  '1 percent milk',\n  '95 percent lean ground beef',\n  'allspice',\n  'almond extract',\n  'almond meal',\n  'almond milk',\n  'almonds',\n  'apple',\n  'applesauce',\n  'applewood smoked bacon',\n  'artificial vanilla',\n  'asiago cheese',\n  'asparagus',\n  'avocado',\n  'baby spinach',\n  'bakers white chocolate',\n  'baking mix',\n  'baking powder',\n  'baking soda',\n  'balsamic vinegar',\n  'banana',\n  'bay leaves',\n  'beef',\n  'beef bouillon cube',\n  'beef broth',\n  'beef gravy',\n  'bell pepper',\n  'berries',\n  'black bean sauce',\n  'black beans',\n  'black pepper',\n  'blueberries',\n  'boneless beef short ribs',\n  'boneless skinless chicken breast',\n  'boneless turkey breast',\n  'bran',\n  'breadcrumbs',\n  'broccoli',\n  'broccoli florets',\n  'butter',\n  'buttermilk',\n  'butterscotch chips',\n  'butterscotch pudding',\n  'cabbage',\n  'cacao powder',\n  'canadian bacon',\n  'candied ginger',\n  'candied orange peel',\n  'candy coated chocolate pieces',\n  'candy corn',\n  'canned black beans',\n  'canned blackeyed peas',\n  'canned butter beans',\n  'canned diced tomatoes',\n  'canned kidney beans',\n  'canned pinto beans',\n  'canned pumpkin',\n  'canned tomato sauce',\n  'canned tomatoes',\n  'canned white beans',\n  'caramel sauce',\n  'caraway seeds',\n  'carrot',\n  'cauliflower',\n  'celery',\n  'celery salt',\n  'celery seed',\n  'celery sticks',\n  'cheddar cheese',\n  'cheese',\n  'cherries',\n  'cherry tomato',\n  'chia seeds',\n  'chicken breast',\n  'chicken broth',\n  'chicken sausage',\n  'chicken stock',\n  'chicken wings',\n  'chili pepper',\n  'chili powder',\n  'chives',\n  'chocolate crumb crust',\n  'chocolate hazelnut spread',\n  'cilantro',\n  'cinnamon',\n  'coarse salt',\n  'coarse sea salt',\n  'cocoa nibs',\n  'coconut',\n  'coconut flour',\n  'coconut milk',\n  'coconut oil',\n  'condensed cream of chicken soup',\n  'condensed cream of mushroom soup',\n  'cooked bacon',\n  'cooked chicken breast',\n  'cooked quinoa',\n  'cooked rice',\n  'cooked rolled oats',\n  'cooking oil',\n  'corn',\n  'corn kernels',\n  'corn starch',\n  'corn syrup',\n  'corn tortilla chips',\n  'cornmeal',\n  'cottage cheese',\n  'cream',\n  'cream cheese',\n  'cream of tartar',\n  'creamy peanut butter',\n  'creole mustard',\n  'crimini mushrooms',\n  'crushed tomatoes',\n  'cumin',\n  'dark brown sugar',\n  'dark chocolate',\n  'dark chocolate bar',\n  'dark sesame oil',\n  'diced ham',\n  'diced tomatoes with green chilies',\n  'dill',\n  'distilled white vinegar',\n  'dried arbol chile',\n  'dried basil',\n  'dried parsley',\n  'dried strawberries',\n  'dried thyme',\n  'dry yeast',\n  'egg',\n  'egg noodles',\n  'egg whites',\n  'egg yolk',\n  'elbow macaroni',\n  'english muffin',\n  'evaporated milk',\n  'extra firm tofu',\n  'extra virgin olive oil',\n  'fat free greek yogurt',\n  'fat free milk',\n  'feta cheese',\n  'filo pastry',\n  'finely crushed pretzels',\n  'fire roasted tomatoes',\n  'flour tortilla',\n  'fontina cheese',\n  'freeze dried strawberries',\n  'fresh basil',\n  'fresh mushrooms',\n  'garlic',\n  'garlic powder',\n  'gelatin',\n  'ginger',\n  'ginger powder',\n  'gluten free chocolate sandwich cookies',\n  'goat cheese',\n  'golden brown sugar',\n  'gorgonzola',\n  'gouda',\n  'graham cracker crumbs',\n  'graham crackers',\n  'grape tomato',\n  'greek yogurt',\n  'green beans',\n  'green chili pepper',\n  'green enchilada sauce',\n  'green pepper',\n  'green tea bag',\n  'ground cayenne pepper',\n  'ground chuck',\n  'ground cinnamon',\n  'ground clove',\n  'ground coriander',\n  'ground flaxseed',\n  'ground pork sausage',\n  'gruyere',\n  'half and half',\n  'ham',\n  'harissa',\n  'havarti',\n  'hemp milk',\n  'hersheys kisses brand milk chocolates',\n  'hollandaise sauce',\n  'hollandaise sauce mix',\n  'honey',\n  'hot sauce',\n  'ice',\n  'icing',\n  'imitation crab',\n  'instant coffee',\n  'instant potatoes flakes',\n  'instant vanilla pudding mix',\n  'italian sausage',\n  'italian seasoning',\n  'italian tomato',\n  'jalapeno pepper',\n  'kosher salt',\n  'lasagne noodles',\n  'lean bacon',\n  'leek',\n  'lemon',\n  'lemon juice',\n  'lemon peel',\n  'light olive oil',\n  'lime',\n  'lime juice',\n  'lime peel',\n  'long grain rice',\n  'low sodium baking powder',\n  'low sodium chicken broth',\n  'lower sodium soy sauce',\n  'lump crabmeat',\n  'macadamia nuts',\n  'maple extract',\n  'maple flavoring',\n  'maple syrup',\n  'marinated artichokes',\n  'mayonnaise',\n  'medjool dates',\n  'mesclun',\n  'milk',\n  'milk chocolate',\n  'mini chocolate chips',\n  'mini peppers',\n  'mint',\n  'miso',\n  'molasses',\n  'monterey jack cheese',\n  'mozzarella',\n  'mustard powder',\n  'nutmeg',\n  'oat bran',\n  'olive oil',\n  'onion',\n  'onion powder',\n  'orange juice',\n  'orange zest',\n  'oregano',\n  'oreo cookies',\n  'orzo',\n  'palm sugar',\n  'pancetta',\n  'panko',\n  'parmesan',\n  'parsley',\n  'peanut butter',\n  'peas and carrots',\n  'pecans',\n  'pecorino romano',\n  'peppermint extract',\n  'pepperoni',\n  'peppers',\n  'persian cucumber',\n  'petite peas',\n  'pickled jalapenos',\n  'pine nuts',\n  'pineapple juice',\n  'pinto beans',\n  'pistachio nuts',\n  'pizza dough',\n  'plain greek yogurt',\n  'plain yogurt',\n  'poppy seeds',\n  'pork ribs',\n  'pork sausage',\n  'portobello mushrooms',\n  'potato',\n  'powdered sugar',\n  'provolone',\n  'puff pastry dough',\n  'pumpkin pie spice',\n  'quark',\n  'quick cooking oats',\n  'quinoa',\n  'raisins',\n  'ranch dressing',\n  'red onion',\n  'red pepper',\n  'red pepper flakes',\n  'reduced fat cream cheese',\n  'refried beans',\n  'refrigerated crescent rolls',\n  'refrigerated pie crust',\n  'rice',\n  'ricotta cheese',\n  'roasted red peppers',\n  'rolled oats',\n  'romanesco',\n  'root vegetable',\n  'russet potato',\n  'sage',\n  'salami',\n  'salt and pepper',\n  'salted butter',\n  'sausage',\n  'savoy cabbage',\n  'scotch whiskey',\n  'seafood seasoning',\n  'semisweet chocolate',\n  'semisweet chocolate chips',\n  'serrano pepper',\n  'shallot',\n  'sharp cheddar cheese',\n  'sherry',\n  'shortcrust pastry',\n  'shortening',\n  'shredded cheddar cheese',\n  'shredded cheese',\n  'shredded mozzarella',\n  'silken tofu',\n  'smoked paprika',\n  'sour cream',\n  'soy buttery spread',\n  'soymilk',\n  'spanish chorizo',\n  'sparkling water',\n  'spinach',\n  'spinach fettuccine',\n  'spring onions',\n  'sriracha',\n  'strawberries',\n  'sub bun',\n  'sugar',\n  'sun dried tomatoes',\n  'sunflower seeds',\n  'sweet potato',\n  'sweetened condensed milk',\n  'swiss chard',\n  'swiss cheese',\n  'table salt',\n  'table syrup',\n  'tapioca starch',\n  'tarragon',\n  'tea',\n  'thin baguette',\n  'thyme',\n  'tomato',\n  'tomato juice',\n  'tomato paste',\n  'turbinado sugar',\n  'unbleached all purpose flour',\n  'unbleached flour',\n  'unsalted butter',\n  'unsweetened coconut',\n  'unsweetened shredded coconut',\n  'vanilla extract',\n  'vanilla paste',\n  'vanilla powder',\n  'vanilla yogurt',\n  'vegetable stock',\n  'walnuts',\n  'water',\n  'wheat flour',\n  'whipped topping',\n  'whipping cream',\n  'white bread',\n  'white chocolate chips',\n  'white onion',\n  'white pepper',\n  'white potato',\n  'white whole wheat flour',\n  'white wine vinegar',\n  'whole chicken',\n  'whole kernel corn',\n  'whole turkey',\n  'whole wheat flour',\n  'whole wheat pastry flour',\n  'worcestershire sauce',\n  'yellow onion',\n  'yogurt',\n  'yukon gold potato',\n  'zucchini',\n];\n\nexport const EMPTY_MESSAGE = \"You haven't added anything yet...\";\n","function getUserName() {\n  (document.querySelector('#user-name') as HTMLElement).textContent = window.localStorage.userName || 'User';\n}\n\nfunction setUserName(userName: string) {\n  window.localStorage.userName = userName;\n  (document.querySelector('#user-name') as HTMLElement).textContent = userName;\n}\n\nexport { getUserName, setUserName };\n","export const tabHandler = (id: string): void => {\n  const tabNavs: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-nav__item'\n  );\n  const tabContents: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-content__item'\n  );\n  let activeTabName = '';\n\n  tabNavs.forEach(element => element.addEventListener('click', e => setActiveTab(e)));\n  const showActiveTabContent = (tabname: string): void => {\n    tabContents.forEach(element => {\n      element.getAttribute('data-tab-content') === tabname\n        ? element.classList.add('is-active')\n        : element.classList.remove('is-active');\n    });\n  };\n  const setActiveTab = (e: Event): void => {\n    e.preventDefault();\n    tabNavs.forEach(element => element.classList.remove('is-active'));\n    const activeTab = (e.target as HTMLElement).classList.contains('tabs-nav__item')\n      ? (e.target as HTMLElement)\n      : (e.target as HTMLElement).closest('.tabs-nav__item');\n    activeTab?.classList.add('is-active');\n    tabContents.forEach(element => element.classList.remove('is-active'));\n    activeTabName = activeTab?.getAttribute('data-tab-name') as string;\n    showActiveTabContent(activeTabName);\n  };\n};\n","const popupHandler = () => {\n  const underlayer = document.querySelector('.popup__body');\n  underlayer?.addEventListener('click', closeParentPopup);\n};\n\nconst closeParentPopup = (e: Event) => {\n  if (e.target instanceof HTMLElement && !e.target?.closest('.popup__content')) {\n    e.target.closest('.popup')?.classList.remove('is-open');\n  }\n};\n\nexport default popupHandler;\n","function createElemWithClass(tagName: string, ...classNames: string[]): HTMLElement {\n  const createdElement = document.createElement(tagName);\n  createdElement.classList.add(...classNames);\n\n  return createdElement;\n}\n\nexport default createElemWithClass;\n","const BASE_URL = 'https://rs-recipes-server.herokuapp.com';\n\nconst ENDPOINTS = {\n  recipes: '/recipes',\n  recipesDistinctProps: '/recipes/distinct',\n  articles: '/articles',\n  userRegister: '/user/register',\n  userLogin: '/user/login',\n  userLogout: '/user/logout',\n  userProfile: '/user/profile',\n  userUpdate: '/user/update',\n};\n\nexport { BASE_URL, ENDPOINTS };\n","import { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\nimport { setUserName } from './manageUserName';\n\nfunction setLocalUser(response: IUserResponse) {\n  window.localStorage.setItem('user', JSON.stringify(response));\n}\n\nfunction addUserButtonListener() {\n  const userProfileButton = document.querySelector('.profile-btn') as HTMLButtonElement;\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  userProfileButton.addEventListener('click', async () => {\n    const tokenValue = localStorage.getItem('token');\n\n    if (tokenValue) {\n      const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n        credentials: 'include',\n      })) as IUserResponse;\n      if (response.status === 200) {\n        const responseBody = (await response.json()) as IUserResponse;\n        setLocalUser(responseBody);\n        window.open('./user-page.html', '_self');\n      } else {\n        signupForm.classList.add('is-open');\n      }\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  });\n}\n\nfunction addRegisterFormListener() {\n  const form = document.forms[1] as HTMLFormElement;\n  form.addEventListener('submit', handleRegistrationForm);\n}\n\nfunction addSignInFormListener() {\n  const form = document.forms[0] as HTMLFormElement;\n  form.addEventListener('submit', handleLoginForm);\n}\n\nasync function handleRegistrationForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeRegistrationForm(event.target as HTMLFormElement);\n\n  if (formData !== undefined) {\n    const response = await sendUserData(formData, ENDPOINTS.userRegister);\n    if (response.status === 400) {\n      (formElement.querySelector('#user-exist') as HTMLElement).classList.remove('hidden');\n    } else {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Registered successfully!');\n      localStorage.setItem('token', 'true');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nasync function handleLoginForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeLoginForm(event.target as HTMLFormElement);\n\n  const response = await sendUserData(formData, ENDPOINTS.userLogin);\n  switch (response.status) {\n    case 401:\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.add('hidden');\n      break;\n    case 404:\n    case 500:\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.add('hidden');\n      break;\n    case 200: {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Logged in successfully!');\n      localStorage.setItem('token', 'true');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nfunction serializeRegistrationForm(formNode: HTMLFormElement): FormData | undefined {\n  const password = formNode.password.value;\n  const passwordConfirm = formNode['password-confirm'].value;\n  if (password !== passwordConfirm) {\n    (formNode.querySelector('#password-mismatch') as HTMLElement).classList.remove('hidden');\n  } else {\n    (formNode.querySelector('#password-mismatch') as HTMLFormElement).classList.add('hidden');\n    (formNode.querySelector('#user-exist') as HTMLFormElement).classList.add('hidden');\n    return new FormData(formNode);\n  }\n}\n\nfunction serializeLoginForm(formNode: HTMLFormElement): FormData {\n  return new FormData(formNode);\n}\n\nasync function sendUserData(data: FormData, endpoint: string): Promise<IUserResponse> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(Object.fromEntries(data.entries())),\n  })) as IUserResponse;\n}\n\nexport { addUserButtonListener, addRegisterFormListener, addSignInFormListener };\n","import { IArticle, ILoadArticleCard, ILoadRecipeCard, IRecipe } from '../types';\nimport * as articlesService from '../api/articlesService';\nimport * as recipesService from '../api/recipesService';\n\nasync function loadCardsContent(\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  contentLoadingService: typeof articlesService.getArticles | typeof recipesService.getRecipes\n): Promise<IArticle[] | IRecipe[]> {\n  return await contentLoadingService(loadConfig.queryOptions);\n}\n\nexport default loadCardsContent;\n","import { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IRecipe, IRecipeQueryOptions } from '../types';\n\nimport transformOptionsToQueryString from '../helpers/transformOptionsToQueryString';\n\nconst getRecipes = async (queryOptions?: IRecipeQueryOptions): Promise<IRecipe[]> => {\n  let queryString = '';\n\n  if (queryOptions && Object.keys(queryOptions).length !== 0) {\n    queryString = transformOptionsToQueryString(queryOptions as IRecipeQueryOptions);\n  }\n\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/${queryString}`);\n\n  return ((await response.json()) as unknown) as IRecipe[];\n};\n\nconst getRecipeById = async (recipeId: string): Promise<IRecipe> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/${recipeId}`);\n\n  return ((await response.json()) as unknown) as IRecipe;\n};\n\nconst getDistinctProps = async (recipePath: string): Promise<string[] | number[]> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/distinct/${recipePath}`);\n\n  return ((await response.json()) as unknown) as string[] | number[];\n};\n\nexport { getRecipes, getRecipeById, getDistinctProps };\n","import { IRecipeQueryOptions, IArticleQueryOptions } from '../types.js';\n\nconst transformOptionsToQueryString = (queryOptions: IRecipeQueryOptions | IArticleQueryOptions) => {\n  const queryStringArray: string[] = [];\n\n  for (const [optionProp, optionValue] of Object.entries(queryOptions)) {\n    switch (typeof optionProp) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        queryStringArray.push(`${optionProp}=${optionValue}`);\n        break;\n\n      case 'object':\n        queryStringArray.push(`${optionProp}=${optionValue.join(',')}`);\n        break;\n    }\n  }\n\n  return '?' + queryStringArray.join('&');\n};\n\nexport default transformOptionsToQueryString;\n","import { IUserResponse } from '../types';\n\nfunction checkItemInUserLists(userObject: IUserResponse | null, listName: 'recipes' | 'articles', itemId: string) {\n  if (!userObject) return [false, false];\n\n  const isInSavedList = userObject[listName].saved.find(id => id === itemId);\n  const isInFavoritesList = userObject[listName].favorite.find(id => id === itemId);\n\n  return [!!isInSavedList, !!isInFavoritesList];\n}\n\nexport default checkItemInUserLists;\n","import { IUserResponse } from '../types';\nimport * as userService from '../api/userService';\nimport { ENDPOINTS } from '../config/api.config';\n\nfunction handleSaveFavoriteButtons(cardElement: Element, cardCategory: 'articles' | 'recipes') {\n  const saveButton = cardElement.querySelector('.save-btn') as HTMLButtonElement;\n  const favoriteButton = cardElement.querySelector('.favorite-btn') as HTMLButtonElement;\n\n  saveButton.addEventListener('click', (e: Event) => {\n    const targetButton = e.target as HTMLButtonElement;\n    targetButton.classList.toggle('is-active');\n    const userObject = JSON.parse(localStorage.getItem('user') || 'null');\n    if (userObject) updateUserResources(userObject, cardElement, targetButton, cardCategory, 'saved');\n  });\n\n  favoriteButton.addEventListener('click', (e: Event) => {\n    const targetButton = e.target as HTMLButtonElement;\n    targetButton.classList.toggle('is-active');\n    const userObject = JSON.parse(localStorage.getItem('user') || 'null');\n    if (userObject) updateUserResources(userObject, cardElement, targetButton, cardCategory, 'favorite');\n  });\n}\n\nfunction updateUserResources(\n  userObject: IUserResponse,\n  cardElement: Element,\n  eventTarget: HTMLButtonElement,\n  cardName: 'articles' | 'recipes',\n  cardCategory: 'saved' | 'favorite'\n) {\n  if (eventTarget.classList.contains('is-active')) {\n    userObject[cardName][cardCategory].push(cardElement.id);\n  } else {\n    userObject[cardName][cardCategory] = userObject[cardName][cardCategory].filter(\n      resourceId => resourceId !== cardElement.id\n    );\n  }\n  userService.sendUserData(userObject, ENDPOINTS.userUpdate);\n  localStorage.setItem('user', JSON.stringify(userObject));\n}\n\nexport { handleSaveFavoriteButtons, updateUserResources };\n","import { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\n\nconst getUserData = async (): Promise<IUserResponse | undefined> => {\n  const tokenValue = localStorage.getItem('token');\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  if (tokenValue) {\n    const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n      credentials: 'include',\n    })) as IUserResponse;\n    if (response.status === 200) {\n      return (await response.json()) as IUserResponse;\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  } else {\n    signupForm.classList.add('is-open');\n  }\n};\n\nasync function sendUserData(data: IUserResponse, endpoint: string): Promise<Response> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(data),\n  })) as IUserResponse;\n}\n\nasync function logOut() {\n  const response = (await fetch(`${BASE_URL}${ENDPOINTS.userLogout}`, {\n    credentials: 'include',\n  })) as Response;\n  if (response.status === 204) {\n    localStorage.removeItem('userName');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    window.open('./index.html', '_self');\n  }\n}\n\nexport { getUserData, sendUserData, logOut };\n","import createElemWithClass from '../../helpers/createElementWithClass';\rimport { MOCK_INGREDIENTS } from '../../constants';\rimport { ILoadRecipeCard, IUserResponse } from '../../types';\rimport * as formHandler from '../../helpers/loginFormHandlers';\rimport { recipesLoadConfigInit } from './config';\rimport loadCardsContent from '../../features/loadCards';\rimport * as recipesService from '../../api/recipesService';\rimport { renderCards } from '../../features/renderCards';\rimport { handleSaveFavoriteButtons } from '../../features/cardButtonsHandler';\r\rconst recipesLoadConfig = { ...recipesLoadConfigInit };\r\rconst constructorInput = document.getElementById('constructor-input') as HTMLInputElement;\rconst dropdownMenu = document.querySelector('.ingredient-options') as HTMLElement;\rconst optionsHolder = document.getElementById('relevant-options') as HTMLElement;\rconst chosenIngredientsBox = document.getElementById('chosen-ingredients') as HTMLElement;\rconst boxEmptyMessageElement = document.getElementById('is-empty-message') as HTMLElement;\rconst addProductsBtn = document.getElementById('add-from-list') as HTMLElement;\rconst searchRecipesBtn = document.getElementById('constructor-search') as HTMLButtonElement;\r\rconst relevantRecipesBlock = document.getElementById('relevant') as HTMLElement;\rconst lackOneRecipeBlock = document.getElementById('lack-1') as HTMLElement;\rconst lackTwoRecipesBlock = document.getElementById('lack-2') as HTMLElement;\rconst lackThreeRecipesBlock = document.getElementById('lack-3') as HTMLElement;\rconst failureSearchBlock = document.getElementById('failure') as HTMLElement;\r\rexport function addConstructorListeners(dropdownIngredients: string[], chosenList: string[]) {\r  formHandler.addUserButtonListener();\r  formHandler.addRegisterFormListener();\r  formHandler.addSignInFormListener();\r\r  chosenIngredientsBox.addEventListener('click', e => {\r    const target = e.target as HTMLElement;\r    if (target.classList.contains('constructor-ingredient__delete')) {\r      const chosenElem = (e.target as HTMLElement).closest('.constructor-ingredient') as HTMLElement;\r      const ingredientName = (chosenElem.querySelector('.constructor-ingredient__name') as HTMLElement).innerHTML;\r      if (chosenElem) {\r        removeIngredientFromChosen(chosenElem);\r        deleteIngredientFromList(ingredientName, chosenList);\r        addIngredientToOptions(chosenElem, dropdownIngredients);\r      }\r    }\r\r    if (chosenIngredientsBox.querySelectorAll('.constructor-ingredient').length === 0) {\r      showBoxIsEmptyMessage();\r    } else {\r      removeBoxIsEmptyMessage();\r    }\r  });\r\r  constructorInput.addEventListener('click', () => {\r    renderIngredientOptions(dropdownIngredients);\r    dropdownMenu.classList.add('is-active');\r  });\r\r  constructorInput.addEventListener('input', () => {\r    dropdownMenu.classList.add('is-active');\r    const relevantIngredients = filterOptions(dropdownIngredients, constructorInput.value.trim().toLocaleLowerCase());\r    relevantIngredients.length ? renderIngredientOptions(relevantIngredients) : renderMessage('Sorry, nothing matches');\r  });\r\r  document.body.addEventListener('click', e => {\r    const target = e.target as HTMLElement;\r    if (!target.classList.contains('ingredient-options__item') && target.id !== 'constructor-input') {\r      dropdownMenu.classList.remove('is-active');\r    }\r  });\r\r  constructorInput.addEventListener('keypress', e => {\r    if (e.key === 'Enter') {\r      moveIngredientToChosen(constructorInput.value, dropdownIngredients, chosenList);\r    }\r  });\r\r  optionsHolder.addEventListener('click', e => {\r    const target = e.target as HTMLElement;\r    if (target.classList.contains('ingredient-options__item')) {\r      moveIngredientToChosen(target.innerText, dropdownIngredients, chosenList);\r    }\r  });\r\r  addProductsBtn.addEventListener('click', () => addUsersProducts(dropdownIngredients, chosenList));\r\r  searchRecipesBtn.addEventListener('click', () => fetchRecipes(chosenList));\r}\r\rexport function renderIngredientOptions(options: string[]): void {\r  optionsHolder.innerHTML = '';\r  options.forEach(item => {\r    const listElem = createElemWithClass('li', 'ingredient-options__item');\r    listElem.id = item;\r    listElem.innerText = item;\r    optionsHolder.append(listElem);\r  });\r}\r\rfunction renderMessage(message: string): void {\r  optionsHolder.innerText = message;\r}\r\rfunction filterOptions(options: string[], value: string) {\r  return options.filter(item => item.includes(value));\r}\r\rfunction addIngredientToList(productName: string, list: string[]) {\r  if (MOCK_INGREDIENTS.includes(productName) && !list.includes(productName)) {\r    list.push(productName);\r    list.sort();\r  }\r}\r\rfunction deleteIngredientFromList(productName: string, list: string[]) {\r  const productIndex = list.findIndex(elementName => elementName === productName.toLowerCase());\r  const deleteCount = productIndex === -1 ? 0 : 1;\r  list.splice(productIndex, deleteCount);\r}\r\rfunction addIngredientToChosenBox(ingredient: string): void {\r  const ingredientEl = createElemWithClass('div', 'constructor-ingredients__item', 'constructor-ingredient');\r  ingredientEl.innerHTML = `\r    <span class=\"constructor-ingredient__name\">${ingredient}</span>\r    <div class=\"constructor-ingredient__delete\"></div>\r  `;\r  chosenIngredientsBox.append(ingredientEl);\r}\r\rfunction moveIngredientToChosen(str: string, dropdownIngredients: string[], chosenList: string[]): void {\r  const ingredient = str.trim().toLowerCase();\r  if (MOCK_INGREDIENTS.includes(ingredient)) {\r    addIngredientToChosenBox(ingredient);\r    addIngredientToList(ingredient, chosenList);\r    removeBoxIsEmptyMessage();\r  }\r  deleteIngredientFromList(ingredient, dropdownIngredients);\r  constructorInput.value = '';\r  renderIngredientOptions(dropdownIngredients);\r  constructorInput.focus();\r}\r\rfunction removeIngredientFromChosen(elem: Element): void {\r  chosenIngredientsBox.removeChild(elem);\r}\r\rfunction addIngredientToOptions(elem: Element, dropdownIngredients: string[]): void {\r  const chosenElemName = (elem.querySelector('.constructor-ingredient__name') as HTMLElement).innerText;\r  dropdownIngredients.push(chosenElemName);\r  dropdownIngredients.sort();\r}\r\rexport function showBoxIsEmptyMessage() {\r  boxEmptyMessageElement.classList.remove('hidden');\r}\r\rfunction removeBoxIsEmptyMessage() {\r  boxEmptyMessageElement.classList.add('hidden');\r}\r\rfunction addUsersProducts(dropdownIngredients: string[], chosenList: string[]) {\r  const userObject = JSON.parse(localStorage.getItem('user') || 'null') as IUserResponse;\r  const prevAddedProductList = chosenList;\r  if (userObject) {\r    userObject.products.own.forEach(product => {\r      if (!prevAddedProductList.includes(product)) {\r        moveIngredientToChosen(product, dropdownIngredients, chosenList);\r      }\r    });\r  }\r}\r\rfunction toggleBlockVisibility(block: HTMLElement, visible: boolean) {\r  if (visible) {\r    block.classList.remove('hidden');\r  } else {\r    block.classList.add('hidden');\r  }\r}\r\rasync function fetchRecipes(chosenList: string[]) {\r  if (chosenList.length > 0) {\r    recipesLoadConfig.queryOptions.ingredientsAll = chosenList.slice();\r    await loadRecipesPage(recipesLoadConfig);\r  }\r}\r\rasync function loadRecipesPage(recipesLoadConfig: ILoadRecipeCard) {\r  const recipesData = await loadCardsContent(recipesLoadConfig, recipesService.getRecipes);\r  if (recipesData.length > 0) {\r    toggleBlockVisibility(relevantRecipesBlock, true);\r    toggleBlockVisibility(failureSearchBlock, false);\r    const userObject = JSON.parse(localStorage.getItem('user') || 'null');\r    renderCards(recipesData, recipesLoadConfig, userObject);\r    addRecipeButtonsListeners();\r  } else {\r    toggleBlockVisibility(relevantRecipesBlock, false);\r    toggleBlockVisibility(lackOneRecipeBlock, false);\r    toggleBlockVisibility(lackTwoRecipesBlock, false);\r    toggleBlockVisibility(lackThreeRecipesBlock, false);\r    toggleBlockVisibility(failureSearchBlock, true);\r  }\r}\r\rfunction addRecipeButtonsListeners() {\r  const recipes = document.querySelectorAll('.card');\r  recipes.forEach(recipe => {\r    handleSaveFavoriteButtons(recipe, 'recipes');\r  });\r}\r","import { ILoadRecipeCard, IRecipeQueryOptions } from '../../types';\r\rconst initRecipesQueryOptions: IRecipeQueryOptions = {\r  page: 0,\r  limit: 10,\r  sort: 'rating',\r  'sort-dir': -1,\r};\r\rconst recipesLoadConfigInit: ILoadRecipeCard = {\r  containerClass: 'relevant',\r  listClass: 'recipes__list',\r  listElemType: 'div',\r  cardClassList: ['recipe__item'],\r  queryOptions: initRecipesQueryOptions,\r  largeCardIndex: -1,\r};\r\rexport { recipesLoadConfigInit };\r","import { burgerMenu } from '../../features/burgerMenu';\nimport '../../styles/main.scss';\nimport { EMPTY_MESSAGE, MOCK_INGREDIENTS } from '../../constants';\nimport { getUserName } from '../../helpers/manageUserName';\nimport { tabHandler } from '../../features/tabs';\nimport popupHandler from '../../features/popup';\nimport * as Controller from './controller';\n\nconst dropdownIngredients = MOCK_INGREDIENTS;\nconst chosenList = [] as string[];\n\nconst boxEmptyMessageElement = document.getElementById('is-empty-message') as HTMLElement;\nboxEmptyMessageElement.innerText = EMPTY_MESSAGE;\n\nburgerMenu();\nController.showBoxIsEmptyMessage();\ngetUserName();\npopupHandler();\ntabHandler('forms-container');\nController.addConstructorListeners(dropdownIngredients, chosenList);\n\nController.renderIngredientOptions(MOCK_INGREDIENTS);\n","import createElementWithClass from '../helpers/createElementWithClass';\nimport capitalize from '../helpers/capitalize';\nimport checkItemInUserLists from '../helpers/checkItemInUserLists';\nimport { IArticle, ILoadArticleCard, ILoadRecipeCard, IRecipe, IUserResponse } from '../types';\n\nfunction renderRecipeCard(\n  recipeData: IRecipe,\n  size: 'normal' | 'large',\n  classList: string[],\n  elemType: string,\n  userObject: IUserResponse | null\n): HTMLElement {\n  const dishType = capitalize(recipeData.dishTypes[0]) || '';\n  const calories = Math.round(recipeData.nutrition.nutrients[0].amount);\n  const cardId = String(recipeData.id);\n  const cardLink = `./recipe.html?id=${cardId}`;\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'recipes', cardId);\n\n  const cardElementClassNames = size === 'normal' ? classList.concat('card') : classList.concat(['card', 'card_lg']);\n  const cardElement = createElementWithClass(elemType, ...cardElementClassNames) as HTMLLIElement;\n  cardElement.id = cardId;\n  cardElement.innerHTML = `\n    <div class=\"card__header\">\n      <p class=\"card__dish\">${dishType}</p>\n      <div class=\"recipe__btns\">\n        <button class=\"save-recipe btn-reset save-btn\"></button>\n        <button class=\"favorite-recipe btn-reset favorite-btn\"></button>\n      </div>\n    </div>\n    <a class=\"card__img\" href=\"${cardLink}\">\n      <img class=\"card__img\" src=${recipeData.image} alt=${recipeData.title}>\n    </a>\n    <a class=\"card-anchor\" href=${cardLink}>\n      <div class=\"card__meta\">\n        <div class=\"data__time\">\n          <p class=\"time__title\">Cook time</p>\n          <p class=\"time__info\">${recipeData.readyInMinutes} min</p>\n        </div>\n        <div class=\"data__calories\">\n          <p class=\"calories__title\">Calories</p>\n          <p class=\"calories__info\">${calories} kcal</p>\n        </div>\n        <div class=\"data__rating\">\n          <p class=\"rating__title\">Rating</p>\n          <p class=\"rating__info\">${recipeData.aggregateLikes}</p>\n        </div>\n      </div>\n      <div class=\"card__body\">\n        <h3 class=\"card__title\">${recipeData.title}</h3>\n        <p class=\"card__text\">${recipeData.summary}</p>\n      </div>\n    </a>\n  `;\n\n  if (isInSavedList) {\n    (cardElement.querySelector('.save-recipe') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (cardElement.querySelector('.favorite-recipe') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  return cardElement;\n}\n\nfunction renderArticleCard(\n  articleData: IArticle,\n  articleClass: string[],\n  userObject: IUserResponse | null\n): HTMLElement {\n  const date = new Date(articleData.postedAt).toLocaleDateString('en-us', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n  const cardId = String(articleData._id);\n  const articleLink = `./article.html?id=${cardId}`;\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'articles', cardId);\n\n  const articleElement = createElementWithClass('article', ...articleClass) as HTMLElement;\n  articleElement.id = articleData._id;\n  articleElement.innerHTML = `\n    <img class=\"article__img\" src=${articleData.image} alt=\"article preview\">\n    <div class=\"article__content\">\n      <div class=\"article__header\">\n        <time class=\"article__date\" datetime=${articleData.postedAt}>${date}</time>\n        <div class=\"article__btns\">\n          <button class=\"save-article btn-reset save-btn\"></button>\n          <button class=\"favorite-article btn-reset favorite-btn\"></button>\n        </div>\n      </div>\n      <h3 class=\"article__title\">${articleData.title}</h3>\n      <p class=\"article__summary\">${articleData.summary}</p>\n      <a class=\"article__btn btn-reset\" href=${articleLink}>contunue reading</a>\n    </div>\n  `;\n\n  if (isInSavedList) {\n    (articleElement.querySelector('.save-article') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (articleElement.querySelector('.favorite-article') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  return articleElement;\n}\n\nfunction renderItems(\n  itemsData: IArticle[] | IRecipe[],\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  userObject: IUserResponse | null\n) {\n  return itemsData.map((item, itemIndex) => {\n    if ('largeCardIndex' in loadConfig) {\n      const size = itemIndex === loadConfig.largeCardIndex ? 'large' : 'normal';\n      return renderRecipeCard(item as IRecipe, size, loadConfig.cardClassList, loadConfig.listElemType, userObject);\n    }\n\n    return renderArticleCard(item as IArticle, loadConfig.articleClassList, userObject);\n  });\n}\n\nfunction renderCards(\n  itemsData: IArticle[] | IRecipe[],\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  userObject: IUserResponse | null\n) {\n  const sectionContainer = document.querySelector(`.${loadConfig.containerClass}`) as HTMLElement;\n  const sectionContainerList = sectionContainer.querySelector(`.${loadConfig.listClass}`) as HTMLUListElement;\n\n  const itemsCards = renderItems(itemsData, loadConfig, userObject);\n\n  sectionContainerList.innerHTML = '';\n  sectionContainerList.append(...itemsCards);\n}\n\nexport { renderRecipeCard, renderArticleCard, renderCards };\n","function capitalize(string: string) {\n  const words = string.split(' ');\n  const wordsCapitalized = words.map(word => word[0].toUpperCase() + word.slice(1));\n\n  return wordsCapitalized.join(' ');\n}\n\nexport default capitalize;\n"],"names":["burgerBtn","document","querySelector","menu","menuLinks","querySelectorAll","enableScroll","body","style","overflow","userSelect","MOCK_INGREDIENTS","setUserName","userName","window","localStorage","textContent","closeParentPopup","e","target","HTMLElement","closest","classList","remove","tagName","classNames","createdElement","createElement","add","setLocalUser","response","setItem","JSON","stringify","async","handleRegistrationForm","event","preventDefault","formElement","formData","formNode","password","value","FormData","serializeRegistrationForm","undefined","sendUserData","status","alert","reset","responseBody","json","name","handleLoginForm","data","endpoint","fetch","method","headers","credentials","Object","fromEntries","entries","getRecipes","queryOptions","queryString","keys","length","queryStringArray","optionProp","optionValue","push","join","userObject","listName","itemId","saved","find","id","favorite","updateUserResources","cardElement","eventTarget","cardName","cardCategory","contains","filter","resourceId","addEventListener","toggle","forEach","el","tabNavs","getElementById","tabContents","activeTabName","element","setActiveTab","activeTab","tabname","getAttribute","userProfileButton","signupForm","getItem","open","forms","loadConfig","contentLoadingService","itemsData","sectionContainerList","containerClass","listClass","itemsCards","map","item","itemIndex","recipeData","size","elemType","dishType","dishTypes","split","word","toUpperCase","slice","calories","Math","round","nutrition","nutrients","amount","cardId","String","cardLink","isInSavedList","isInFavoritesList","cardElementClassNames","concat","createElementWithClass","innerHTML","image","title","readyInMinutes","aggregateLikes","summary","renderRecipeCard","largeCardIndex","cardClassList","listElemType","articleData","articleClass","date","Date","postedAt","toLocaleDateString","year","month","day","_id","articleLink","articleElement","renderArticleCard","articleClassList","renderItems","append","saveButton","favoriteButton","targetButton","parse"],"sourceRoot":""}