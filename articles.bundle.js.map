{"version":3,"file":"articles.bundle.js","mappings":"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","sources":["webpack://my-webpack-project/./src/features/burgerMenu.ts","webpack://my-webpack-project/./src/features/selector.ts","webpack://my-webpack-project/./src/pages/articles/config.ts","webpack://my-webpack-project/./src/helpers/createElementWithClass.ts","webpack://my-webpack-project/./src/helpers/checkItemInUserLists.ts","webpack://my-webpack-project/./src/config/api.config.js","webpack://my-webpack-project/./src/api/articlesService.ts","webpack://my-webpack-project/./src/helpers/transformOptionsToQueryString.ts","webpack://my-webpack-project/./src/features/cardButtonsHandler.ts","webpack://my-webpack-project/./src/api/userService.ts","webpack://my-webpack-project/./src/helpers/manageUserName.ts","webpack://my-webpack-project/./src/helpers/loginFormHandlers.ts","webpack://my-webpack-project/./src/pages/articles/controller.ts","webpack://my-webpack-project/./src/features/renderCards.ts","webpack://my-webpack-project/./src/helpers/capitalize.ts","webpack://my-webpack-project/./src/features/loadCards.ts","webpack://my-webpack-project/./src/features/tabs.ts","webpack://my-webpack-project/./src/features/popup.ts","webpack://my-webpack-project/./src/pages/articles/index.ts"],"sourcesContent":["const burgerBtn = document.querySelector('.burger') as HTMLElement;\nconst menu = document.querySelector('.navbar__list') as HTMLElement;\nconst menuLinks = [...document.querySelectorAll('.nav__link')] as HTMLElement[];\n\nexport const burgerMenu = () => {\n  burgerBtn.addEventListener('click', () => {\n    burgerBtn.classList.toggle('burger_open');\n    menu.classList.toggle('navbar__list_open');\n    burgerBtn.classList.contains('burger_open') ? disableScroll() : enableScroll();\n  });\n\n  menuLinks.forEach((el: HTMLElement) => {\n    el.addEventListener('click', () => {\n      burgerBtn.classList.remove('burger_open');\n      menu.classList.remove('navbar__list_open');\n      enableScroll();\n    });\n  });\n};\n\nfunction disableScroll() {\n  document.body.style.overflow = 'hidden';\n  document.body.style.userSelect = 'none';\n}\n\nfunction enableScroll() {\n  document.body.style.overflow = 'auto';\n  document.body.style.userSelect = 'auto';\n}\n","const selectHandler = (): void => {\n  const selected = document.querySelector('#selected');\n  const optionsContainer = document.querySelector('.options-container');\n  const optionsList = document.querySelectorAll('.option');\n  selected?.addEventListener('click', () => {\n    optionsContainer?.classList.toggle('is-active');\n  });\n\n  optionsList.forEach(opt => {\n    opt.addEventListener('click', () => {\n      if (selected) {\n        selected.textContent = opt.textContent?.trim() as string;\n        optionsContainer?.classList.remove('is-active');\n      }\n    });\n  });\n};\n\nexport default selectHandler;\n","import { IArticleQueryOptions, ILoadArticleCard } from '../../types';\n\nconst initArticlesQueryOptions: IArticleQueryOptions = {\n  page: 0,\n  limit: 7,\n  category: 'cooking tips',\n};\n\nconst articlesLoadConfigInit: ILoadArticleCard = {\n  containerClass: 'articles',\n  listClass: 'articles__list',\n  articleClassList: ['article'],\n  queryOptions: initArticlesQueryOptions,\n};\n\nexport { articlesLoadConfigInit };\n","function createElemWithClass(tagName: string, ...classNames: string[]): HTMLElement {\n  const createdElement = document.createElement(tagName);\n  createdElement.classList.add(...classNames);\n\n  return createdElement;\n}\n\nexport default createElemWithClass;\n","import { IUserResponse } from '../types';\n\nfunction checkItemInUserLists(userObject: IUserResponse | null, listName: 'recipes' | 'articles', itemId: string) {\n  if (!userObject) return [false, false];\n\n  const isInSavedList = userObject[listName].saved.find(id => id === itemId);\n  const isInFavoritesList = userObject[listName].favorite.find(id => id === itemId);\n\n  return [!!isInSavedList, !!isInFavoritesList];\n}\n\nexport default checkItemInUserLists;\n","const BASE_URL = 'https://rs-recipes-server.herokuapp.com';\n\nconst ENDPOINTS = {\n  recipes: '/recipes',\n  recipesDistinctProps: '/recipes/distinct',\n  articles: '/articles',\n  userRegister: '/user/register',\n  userLogin: '/user/login',\n  userLogout: '/user/logout',\n  userProfile: '/user/profile',\n  userUpdate: '/user/update',\n};\n\nexport { BASE_URL, ENDPOINTS };\n","import { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IArticle, IArticleQueryOptions } from '../types';\n\nimport transformOptionsToQueryString from '../helpers/transformOptionsToQueryString';\n\nconst getArticles = async (queryOptions?: IArticleQueryOptions): Promise<IArticle[]> => {\n  let queryString = '';\n\n  if (queryOptions && Object.keys(queryOptions).length !== 0) {\n    queryString = transformOptionsToQueryString(queryOptions as IArticleQueryOptions);\n  }\n\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.articles}/${queryString}`);\n\n  return ((await response.json()) as unknown) as IArticle[];\n};\n\nconst getArticlesById = async (articleId: string): Promise<IArticle> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.articles}/${articleId}`);\n\n  return ((await response.json()) as unknown) as IArticle;\n};\n\nexport { getArticles, getArticlesById };\n","import { IRecipeQueryOptions, IArticleQueryOptions } from '../types.js';\n\nconst transformOptionsToQueryString = (queryOptions: IRecipeQueryOptions | IArticleQueryOptions) => {\n  const queryStringArray: string[] = [];\n\n  for (const [optionProp, optionValue] of Object.entries(queryOptions)) {\n    switch (typeof optionProp) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        queryStringArray.push(`${optionProp}=${optionValue}`);\n        break;\n\n      case 'object':\n        queryStringArray.push(`${optionProp}=${optionValue.join(',')}`);\n        break;\n    }\n  }\n\n  return '?' + queryStringArray.join('&');\n};\n\nexport default transformOptionsToQueryString;\n","import { IUserResponse } from '../types';\nimport * as userService from '../api/userService';\nimport { ENDPOINTS } from '../config/api.config';\n\nfunction handleSaveFavoriteButtons(cardElement: Element, cardCategory: 'articles' | 'recipes') {\n  const saveButton = cardElement.querySelector('.save-btn') as HTMLButtonElement;\n  const favoriteButton = cardElement.querySelector('.favorite-btn') as HTMLButtonElement;\n\n  saveButton.addEventListener('click', (e: Event) => {\n    const targetButton = e.target as HTMLButtonElement;\n    targetButton.classList.toggle('is-active');\n    const userObject = JSON.parse(localStorage.getItem('user') || 'null');\n    if (userObject) updateUserResources(userObject, cardElement, targetButton, cardCategory, 'saved');\n  });\n\n  favoriteButton.addEventListener('click', (e: Event) => {\n    const targetButton = e.target as HTMLButtonElement;\n    targetButton.classList.toggle('is-active');\n    const userObject = JSON.parse(localStorage.getItem('user') || 'null');\n    if (userObject) updateUserResources(userObject, cardElement, targetButton, cardCategory, 'favorite');\n  });\n}\n\nfunction updateUserResources(\n  userObject: IUserResponse,\n  cardElement: Element,\n  eventTarget: HTMLButtonElement,\n  cardName: 'articles' | 'recipes',\n  cardCategory: 'saved' | 'favorite'\n) {\n  if (eventTarget.classList.contains('is-active')) {\n    userObject[cardName][cardCategory].push(cardElement.id);\n  } else {\n    userObject[cardName][cardCategory] = userObject[cardName][cardCategory].filter(\n      resourceId => resourceId !== cardElement.id\n    );\n  }\n  userService.sendUserData(userObject, ENDPOINTS.userUpdate);\n  localStorage.setItem('user', JSON.stringify(userObject));\n}\n\nexport { handleSaveFavoriteButtons, updateUserResources };\n","import getCookieValue from '../helpers/getCookieValue';\nimport { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\n\nconst getUserData = async (): Promise<IUserResponse | undefined> => {\n  // const tokenValue = getCookieValue('token');\n  const tokenValue = localStorage.getItem('token');\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  if (tokenValue) {\n    const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n      credentials: 'include',\n    })) as IUserResponse;\n    if (response.status === 200) {\n      return (await response.json()) as IUserResponse;\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  } else {\n    signupForm.classList.add('is-open');\n  }\n};\n\nasync function sendUserData(data: IUserResponse, endpoint: string): Promise<Response> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(data),\n  })) as IUserResponse;\n}\n\nasync function logOut() {\n  const response = (await fetch(`${BASE_URL}${ENDPOINTS.userLogout}`, {\n    credentials: 'include',\n  })) as Response;\n  if (response.status === 204) {\n    localStorage.removeItem('userName');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    window.open('./index.html', '_self');\n  }\n}\n\nexport { getUserData, sendUserData, logOut };\n","function getUserName() {\n  (document.querySelector('#user-name') as HTMLElement).textContent = window.localStorage.userName || 'User';\n}\n\nfunction setUserName(userName: string) {\n  window.localStorage.userName = userName;\n  (document.querySelector('#user-name') as HTMLElement).textContent = userName;\n}\n\nexport { getUserName, setUserName };\n","import getCookieValue from './getCookieValue';\nimport { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\nimport { setUserName } from './manageUserName';\n\nfunction setLocalUser(response: IUserResponse) {\n  window.localStorage.setItem('user', JSON.stringify(response));\n}\n\nfunction addUserButtonListener() {\n  const userProfileButton = document.querySelector('.profile-btn') as HTMLButtonElement;\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  userProfileButton.addEventListener('click', async () => {\n    // const tokenValue = getCookieValue('token');\n    const tokenValue = localStorage.getItem('token');\n\n    if (tokenValue) {\n      const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n        credentials: 'include',\n      })) as IUserResponse;\n      if (response.status === 200) {\n        const responseBody = (await response.json()) as IUserResponse;\n        setLocalUser(responseBody);\n        window.open('./user-page.html', '_self');\n      } else {\n        signupForm.classList.add('is-open');\n      }\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  });\n}\n\nfunction addRegisterFormListener() {\n  const form = document.forms[1] as HTMLFormElement;\n  form.addEventListener('submit', handleRegistrationForm);\n}\n\nfunction addSignInFormListener() {\n  const form = document.forms[0] as HTMLFormElement;\n  form.addEventListener('submit', handleLoginForm);\n}\n\nasync function handleRegistrationForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeRegistrationForm(event.target as HTMLFormElement);\n\n  if (formData !== undefined) {\n    const response = await sendUserData(formData, ENDPOINTS.userRegister);\n    if (response.status === 400) {\n      (formElement.querySelector('#user-exist') as HTMLElement).classList.remove('hidden');\n    } else {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Registered successfully!');\n      localStorage.setItem('token', 'true');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nasync function handleLoginForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeLoginForm(event.target as HTMLFormElement);\n\n  const response = await sendUserData(formData, ENDPOINTS.userLogin);\n  switch (response.status) {\n    case 401:\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.add('hidden');\n      break;\n    case 404:\n    case 500:\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.add('hidden');\n      break;\n    case 200: {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Logged in successfully!');\n      localStorage.setItem('token', 'true');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nfunction serializeRegistrationForm(formNode: HTMLFormElement): FormData | undefined {\n  const password = formNode.password.value;\n  const passwordConfirm = formNode['password-confirm'].value;\n  if (password !== passwordConfirm) {\n    (formNode.querySelector('#password-mismatch') as HTMLElement).classList.remove('hidden');\n  } else {\n    (formNode.querySelector('#password-mismatch') as HTMLFormElement).classList.add('hidden');\n    (formNode.querySelector('#user-exist') as HTMLFormElement).classList.add('hidden');\n    return new FormData(formNode);\n  }\n}\n\nfunction serializeLoginForm(formNode: HTMLFormElement): FormData {\n  return new FormData(formNode);\n}\n\nasync function sendUserData(data: FormData, endpoint: string): Promise<IUserResponse> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(Object.fromEntries(data.entries())),\n  })) as IUserResponse;\n}\n\nexport { addUserButtonListener, addRegisterFormListener, addSignInFormListener };\n","import { renderCards } from '../../features/renderCards';\nimport * as articlesService from '../../api/articlesService';\nimport { ILoadArticleCard } from '../../types';\nimport { articlesLoadConfigInit } from './config';\nimport { handleSaveFavoriteButtons } from '../../features/cardButtonsHandler';\nimport loadCardsContent from '../../features/loadCards';\nimport * as formHandler from '../../helpers/loginFormHandlers';\n\nconst userObject = JSON.parse(localStorage.getItem('user') || 'null');\nconst articlesLoadConfig = articlesLoadConfigInit;\n\nasync function loadArticlesPage(articlesLoadConfig: ILoadArticleCard) {\n  const articlesData = await loadCardsContent(articlesLoadConfig, articlesService.getArticles);\n  renderCards(articlesData, articlesLoadConfig, userObject);\n}\n\nfunction addListeners() {\n  formHandler.addUserButtonListener();\n  formHandler.addRegisterFormListener();\n  formHandler.addSignInFormListener();\n  addCategorySelectListener();\n  addArticleButtonsListeners();\n  addSearchInputListener();\n}\n\nfunction addCategorySelectListener() {\n  const selectContainer = document.querySelector('.options-container') as HTMLDivElement;\n  const categoryInputs = selectContainer.querySelectorAll('input[type=\"radio\"]') as NodeListOf<HTMLInputElement>;\n  for (const radioButton of categoryInputs) {\n    radioButton.addEventListener('change', fetchArticles);\n  }\n}\n\nasync function fetchArticles(e: Event) {\n  const categoryInput = e.target as HTMLInputElement;\n  articlesLoadConfig.queryOptions.category = categoryInput.value.replaceAll('-', ' ');\n  await loadArticlesPage(articlesLoadConfig);\n  addArticleButtonsListeners();\n}\n\nfunction addArticleButtonsListeners() {\n  const articles = document.querySelectorAll('.article');\n  articles.forEach(article => {\n    handleSaveFavoriteButtons(article, 'articles');\n  });\n}\n\nfunction addSearchInputListener() {\n  // const searchInput = document.querySelector('.search__input') as HTMLInputElement;\n  // searchInput.addEventListener('change', (e: Event) => {\n  //   const input = e.target as HTMLInputElement;\n  // });\n}\n\nexport { loadArticlesPage, addListeners };\n","import createElementWithClass from '../helpers/createElementWithClass';\nimport capitalize from '../helpers/capitalize';\nimport checkItemInUserLists from '../helpers/checkItemInUserLists';\nimport { IArticle, ILoadArticleCard, ILoadRecipeCard, IRecipe, IUserResponse } from '../types';\n\nfunction renderRecipeCard(\n  recipeData: IRecipe,\n  size: 'normal' | 'large',\n  classList: string[],\n  elemType: string,\n  userObject: IUserResponse | null\n): HTMLElement {\n  const dishType = capitalize(recipeData.dishTypes[0]) || '';\n  const calories = Math.round(recipeData.nutrition.nutrients[0].amount);\n  const cardId = String(recipeData.id);\n  const cardLink = `./recipe.html?id=${cardId}`;\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'recipes', cardId);\n\n  const cardElementClassNames = size === 'normal' ? classList.concat('card') : classList.concat(['card', 'card_lg']);\n  const cardElement = createElementWithClass(elemType, ...cardElementClassNames) as HTMLLIElement;\n  cardElement.id = cardId;\n  cardElement.innerHTML = `\n    <div class=\"card__header\">\n      <p class=\"card__dish\">${dishType}</p>\n      <div class=\"recipe__btns\">\n        <button class=\"save-recipe btn-reset save-btn\"></button>\n        <button class=\"favorite-recipe btn-reset favorite-btn\"></button>\n      </div>\n    </div>\n    <a class=\"card__img\" href=\"${cardLink}\">\n      <img class=\"card__img\" src=${recipeData.image} alt=${recipeData.title}>\n    </a>\n    <a class=\"card-anchor\" href=${cardLink}>\n      <div class=\"card__meta\">\n        <div class=\"data__time\">\n          <p class=\"time__title\">Cook time</p>\n          <p class=\"time__info\">${recipeData.readyInMinutes} min</p>\n        </div>\n        <div class=\"data__calories\">\n          <p class=\"calories__title\">Calories</p>\n          <p class=\"calories__info\">${calories} kcal</p>\n        </div>\n        <div class=\"data__rating\">\n          <p class=\"rating__title\">Rating</p>\n          <p class=\"rating__info\">${recipeData.aggregateLikes}</p>\n        </div>\n      </div>\n      <div class=\"card__body\">\n        <h3 class=\"card__title\">${recipeData.title}</h3>\n        <p class=\"card__text\">${recipeData.summary}</p>\n      </div>\n    </a>\n  `;\n\n  if (isInSavedList) {\n    (cardElement.querySelector('.save-recipe') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (cardElement.querySelector('.favorite-recipe') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  return cardElement;\n}\n\nfunction renderArticleCard(\n  articleData: IArticle,\n  articleClass: string[],\n  userObject: IUserResponse | null\n): HTMLElement {\n  const date = new Date(articleData.postedAt).toLocaleDateString('en-us', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n  const cardId = String(articleData._id);\n  const articleLink = `./article.html?id=${cardId}`;\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'articles', cardId);\n\n  const articleElement = createElementWithClass('article', ...articleClass) as HTMLElement;\n  articleElement.id = articleData._id;\n  articleElement.innerHTML = `\n    <img class=\"article__img\" src=${articleData.image} alt=\"article preview\">\n    <div class=\"article__content\">\n      <div class=\"article__header\">\n        <time class=\"article__date\" datetime=${articleData.postedAt}>${date}</time>\n        <div class=\"article__btns\">\n          <button class=\"save-article btn-reset save-btn\"></button>\n          <button class=\"favorite-article btn-reset favorite-btn\"></button>\n        </div>\n      </div>\n      <h3 class=\"article__title\">${articleData.title}</h3>\n      <p class=\"article__summary\">${articleData.summary}</p>\n      <a class=\"article__btn btn-reset\" href=${articleLink}>contunue reading</a>\n    </div>\n  `;\n\n  if (isInSavedList) {\n    (articleElement.querySelector('.save-article') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (articleElement.querySelector('.favorite-article') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  return articleElement;\n}\n\nfunction renderItems(\n  itemsData: IArticle[] | IRecipe[],\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  userObject: IUserResponse | null\n) {\n  return itemsData.map((item, itemIndex) => {\n    if ('largeCardIndex' in loadConfig) {\n      const size = itemIndex === loadConfig.largeCardIndex ? 'large' : 'normal';\n      return renderRecipeCard(item as IRecipe, size, loadConfig.cardClassList, loadConfig.listElemType, userObject);\n    }\n\n    return renderArticleCard(item as IArticle, loadConfig.articleClassList, userObject);\n  });\n}\n\nfunction renderCards(\n  itemsData: IArticle[] | IRecipe[],\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  userObject: IUserResponse | null\n) {\n  const sectionContainer = document.querySelector(`.${loadConfig.containerClass}`) as HTMLElement;\n  const sectionContainerList = sectionContainer.querySelector(`.${loadConfig.listClass}`) as HTMLUListElement;\n\n  const itemsCards = renderItems(itemsData, loadConfig, userObject);\n\n  sectionContainerList.innerHTML = '';\n  sectionContainerList.append(...itemsCards);\n}\n\nexport { renderRecipeCard, renderArticleCard, renderCards };\n","function capitalize(string: string) {\n  const words = string.split(' ');\n  const wordsCapitalized = words.map(word => word[0].toUpperCase() + word.slice(1));\n\n  return wordsCapitalized.join(' ');\n}\n\nexport default capitalize;\n","import { IArticle, ILoadArticleCard, ILoadRecipeCard, IRecipe } from '../types';\nimport * as articlesService from '../api/articlesService';\nimport * as recipesService from '../api/recipesService';\n\nasync function loadCardsContent(\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  contentLoadingService: typeof articlesService.getArticles | typeof recipesService.getRecipes\n): Promise<IArticle[] | IRecipe[]> {\n  return await contentLoadingService(loadConfig.queryOptions);\n}\n\nexport default loadCardsContent;\n","export const tabHandler = (id: string): void => {\n  const tabNavs: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-nav__item'\n  );\n  const tabContents: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-content__item'\n  );\n  let activeTabName = '';\n\n  tabNavs.forEach(element => element.addEventListener('click', e => setActiveTab(e)));\n  const showActiveTabContent = (tabname: string): void => {\n    tabContents.forEach(element => {\n      element.getAttribute('data-tab-content') === tabname\n        ? element.classList.add('is-active')\n        : element.classList.remove('is-active');\n    });\n  };\n  const setActiveTab = (e: Event): void => {\n    e.preventDefault();\n    tabNavs.forEach(element => element.classList.remove('is-active'));\n    const activeTab = (e.target as HTMLElement).classList.contains('tabs-nav__item')\n      ? (e.target as HTMLElement)\n      : (e.target as HTMLElement).closest('.tabs-nav__item');\n    activeTab?.classList.add('is-active');\n    tabContents.forEach(element => element.classList.remove('is-active'));\n    activeTabName = activeTab?.getAttribute('data-tab-name') as string;\n    showActiveTabContent(activeTabName);\n  };\n};\n","const popupHandler = () => {\n  const underlayer = document.querySelector('.popup__body');\n  underlayer?.addEventListener('click', closeParentPopup);\n};\n\nconst closeParentPopup = (e: Event) => {\n  if (e.target instanceof HTMLElement && !e.target?.closest('.popup__content')) {\n    e.target.closest('.popup')?.classList.remove('is-open');\n  }\n};\n\nexport default popupHandler;\n","import { burgerMenu } from '../../features/burgerMenu';\nimport selectHandler from '../../features/selector';\nimport '../../styles/main.scss';\nimport { articlesLoadConfigInit } from './config';\nimport * as Controller from './controller';\nimport { getUserName } from '../../helpers/manageUserName';\nimport { tabHandler } from '../../features/tabs';\nimport popupHandler from '../../features/popup';\n\nController.loadArticlesPage(articlesLoadConfigInit).then(() => Controller.addListeners());\nburgerMenu();\nselectHandler();\ngetUserName();\npopupHandler();\ntabHandler('forms-container');\n"],"names":["burgerBtn","document","querySelector","menu","menuLinks","querySelectorAll","enableScroll","body","style","overflow","userSelect","articlesLoadConfigInit","containerClass","listClass","articleClassList","queryOptions","page","limit","category","tagName","classNames","createdElement","createElement","classList","add","userObject","listName","itemId","saved","find","id","favorite","getArticles","async","queryString","Object","keys","length","queryStringArray","optionProp","optionValue","entries","push","join","response","fetch","json","updateUserResources","cardElement","eventTarget","cardName","cardCategory","contains","filter","resourceId","data","endpoint","method","headers","credentials","JSON","stringify","localStorage","setItem","setUserName","userName","window","textContent","setLocalUser","handleRegistrationForm","event","preventDefault","formElement","target","formData","formNode","password","value","FormData","remove","serializeRegistrationForm","undefined","status","alert","reset","responseBody","name","handleLoginForm","fromEntries","parse","getItem","articlesLoadConfig","loadArticlesPage","itemsData","loadConfig","sectionContainerList","itemsCards","map","item","itemIndex","recipeData","size","elemType","dishType","dishTypes","split","word","toUpperCase","slice","calories","Math","round","nutrition","nutrients","amount","cardId","String","cardLink","isInSavedList","isInFavoritesList","cardElementClassNames","concat","createElementWithClass","innerHTML","image","title","readyInMinutes","aggregateLikes","summary","renderRecipeCard","largeCardIndex","cardClassList","listElemType","articleData","articleClass","date","Date","postedAt","toLocaleDateString","year","month","day","_id","articleLink","articleElement","renderArticleCard","renderItems","append","renderCards","contentLoadingService","loadCards","fetchArticles","e","categoryInput","replaceAll","addArticleButtonsListeners","forEach","article","saveButton","favoriteButton","addEventListener","targetButton","toggle","handleSaveFavoriteButtons","closeParentPopup","HTMLElement","closest","then","userProfileButton","signupForm","open","forms","categoryInputs","radioButton","addCategorySelectListener","el","selected","optionsContainer","optionsList","opt","trim","tabNavs","getElementById","tabContents","activeTabName","element","setActiveTab","activeTab","tabname","getAttribute","tabHandler"],"sourceRoot":""}