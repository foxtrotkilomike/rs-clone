{"version":3,"file":"article.bundle.js","mappings":"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","sources":["webpack://my-webpack-project/./src/features/burgerMenu.ts","webpack://my-webpack-project/./src/config/api.config.js","webpack://my-webpack-project/./src/helpers/createElementWithClass.ts","webpack://my-webpack-project/./src/helpers/checkItemInUserLists.ts","webpack://my-webpack-project/./src/pages/recipe/render.ts","webpack://my-webpack-project/./src/features/cardButtonsHandler.ts","webpack://my-webpack-project/./src/api/userService.ts","webpack://my-webpack-project/./src/helpers/manageUserName.ts","webpack://my-webpack-project/./src/helpers/loginFormHandlers.ts","webpack://my-webpack-project/./src/pages/article/controller.ts","webpack://my-webpack-project/./src/features/tabs.ts","webpack://my-webpack-project/./src/features/popup.ts","webpack://my-webpack-project/./src/pages/article/index.ts","webpack://my-webpack-project/./src/api/articlesService.ts","webpack://my-webpack-project/./src/pages/article/render.ts","webpack://my-webpack-project/./src/features/renderCards.ts","webpack://my-webpack-project/./src/helpers/capitalize.ts","webpack://my-webpack-project/./src/api/recipesService.ts"],"sourcesContent":["const burgerBtn = document.querySelector('.burger') as HTMLElement;\nconst menu = document.querySelector('.navbar__list') as HTMLElement;\nconst menuLinks = [...document.querySelectorAll('.nav__link')] as HTMLElement[];\n\nexport const burgerMenu = () => {\n  burgerBtn.addEventListener('click', () => {\n    burgerBtn.classList.toggle('burger_open');\n    menu.classList.toggle('navbar__list_open');\n  });\n\n  menuLinks.forEach((el: HTMLElement) => {\n    el.addEventListener('click', () => {\n      burgerBtn.classList.remove('burger_open');\n      menu.classList.remove('navbar__list_open');\n    });\n  });\n};\n","const BASE_URL = 'https://rs-recipes-server.herokuapp.com';\n// const BASE_URL = 'http://localhost:3000';\n\nconst ENDPOINTS = {\n  recipes: '/recipes',\n  recipesDistinctProps: '/recipes/distinct',\n  articles: '/articles',\n  userRegister: '/user/register',\n  userLogin: '/user/login',\n  userLogout: '/user/logout',\n  userProfile: '/user/profile',\n  userUpdate: '/user/update',\n};\n\nexport { BASE_URL, ENDPOINTS };\n","function createElemWithClass(tagName: string, ...classNames: string[]): HTMLElement {\n  const createdElement = document.createElement(tagName);\n  createdElement.classList.add(...classNames);\n\n  return createdElement;\n}\n\nexport default createElemWithClass;\n","import { IUserResponse } from '../types';\n\nfunction checkItemInUserLists(userObject: IUserResponse | null, listName: 'recipes' | 'articles', itemId: string) {\n  if (!userObject) return [false, false];\n\n  const isInSavedList = userObject[listName].saved.find(id => id === itemId);\n  const isInFavoritesList = userObject[listName].favorite.find(id => id === itemId);\n\n  return [!!isInSavedList, !!isInFavoritesList];\n}\n\nexport default checkItemInUserLists;\n","import { ILoadRecipePage, IIngredientMeta, INutrient, IUserResponse } from '../../types';\nimport createElementWithClass from '../../helpers/createElementWithClass';\nimport infoSvg from '../../assets/svg/info-circle.svg';\nimport round from '../../helpers/round';\nimport checkItemInUserLists from '../../helpers/checkItemInUserLists';\n\nconst PRICE_COEFFICIENT = 100;\n\nfunction renderRecipe(recipeData: ILoadRecipePage, equipmentList: string[] | undefined) {\n  const main = document.querySelector('#main') as HTMLElement;\n  const recipeContainer = createElementWithClass('section', 'recipe');\n\n  const list = renderIngredientsList(recipeData.extendedIngredients);\n  const nutrients = renderNutrients(recipeData.nutrition.nutrients);\n  const categories = renderList(recipeData.diets, 'category__item');\n  const equipment = renderList(equipmentList, 'equipment__item');\n  const servingCost = (recipeData.pricePerServing / PRICE_COEFFICIENT).toFixed(2);\n\n  recipeContainer.innerHTML = `\n    <div class=\"container\">\n      <h1 class=\"recipe__title\">${recipeData.title}</h1>\n      <div class=\"recipe__content\">\n        <div class=\"recipe__consist\">\n          <div class=\"recipe__ingredients\">\n            <div class=\"ingredients__header\">\n              <h3 class=\"ingredients__title\">Ingredients</h3>\n              <button class=\"ingredients__btn btn-reset\" id=\"less-ingredients\">-</button>\n              <span class=\"ingredients__amount\">${recipeData.servings}</span>\n              <button class=\"ingredients__btn btn-reset\" id=\"more-ingredients\">+</button>\n            </div>\n            <ul class=\"ingredients__list list-reset\">\n              ${list.innerHTML}\n            </ul>\n            <button class=\"btn-active btn-reset\">Add to my shopping list</button>\n          </div>\n          ${nutrients}\n        </div>\n        <div class=\"recipe__descr\">\n          <img class=\"recipe__img\" src=${recipeData.image} alt=${recipeData.title}>\n          <div class=\"recipe__info\">\n            <img class=\"info-icon\" src=${infoSvg} alt=\"\">\n            <div class=\"info__main\">\n              <ul class=\"info__numbers list-reset\">\n                <li class=\"number__item\">Cooking time:&nbsp; <span class=\"number_time\">\n                  ${recipeData.readyInMinutes} min</span>\n                </li>\n                <li class=\"number__item\">Servings:&nbsp; <span class=\"number_servings\">\n                  ${recipeData.servings}</span>\n                </li>\n                <li class=\"number__item\">Price per serving:&nbsp; <span class=\"number_price\">$\n                  ${servingCost}\n                </span></li>\n                <li class=\"number__item\">Health score:&nbsp; <span class=\"number_health\">\n                  ${recipeData.healthScore}\n                </span></li>\n              </ul>\n              <ul class=\"info__categories list-reset\">\n                ${categories?.innerHTML}\n              </ul>\n            </div>\n            <div class=\"info__equipment\">\n              <span class=\"equipment__text\">Equipment:</span>\n              <ul class=\"equipment__list list-reset\">\n                ${equipment?.innerHTML || 'No equipment'}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n\n  main.appendChild(recipeContainer);\n}\n\nfunction renderInstructions(instructions: string[], recipeId: string, userObject: IUserResponse) {\n  const main = document.querySelector('#main') as HTMLElement;\n  const instructionsContainer = createElementWithClass('section', 'instruction');\n\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'recipes', recipeId);\n\n  const instructionsList = renderList(instructions, 'instruction__item');\n\n  instructionsContainer.innerHTML = `\n    <div class=\"container recipe-container\" id=${recipeId}>\n      <h3 class=\"instruction__title\">Instructions</h3>\n      <ol class=\"instruction__list\">\n        ${instructionsList?.innerHTML}\n      </ol>\n      <div class=\"instruction__btns\">\n        <button class=\"instruction__btn_favorite btn-active btn-reset favorite-btn\">Add to favorite recipes</button>\n        <button class=\"instruction__btn_save btn-active btn-reset save-btn\">Save for later</button>\n      </div>\n    </div>\n  `;\n\n  if (isInSavedList) {\n    (instructionsContainer.querySelector('.instruction__btn_save') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (instructionsContainer.querySelector('.instruction__btn_favorite') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  main.appendChild(instructionsContainer);\n}\n\nfunction renderIngredientsList(ingredientsList: IIngredientMeta[]): HTMLElement {\n  const instructionsList = document.createElement('div');\n\n  const ingredients = ingredientsList.map((indredient, index) => {\n    const listItem = createElementWithClass('li', 'ingredients__item');\n    listItem.innerHTML = `\n      <input type=\"checkbox\" id=\"ingredient${index}\" name=\"ingredient${index}\">\n      <label for=\"ingredient${index}\">${indredient.original}</label>\n    `;\n\n    return listItem;\n  });\n\n  instructionsList.append(...ingredients);\n  return instructionsList;\n}\n\nfunction renderNutrients(nutrients: INutrient[]): string {\n  return `\n  <div class=\"nutrients recipe__nutrients\">\n    <div class=\"nutrients__item\">\n      <p>Calories</p>\n      <p class=\"nutrients__calories\">${round(nutrients[0].amount)}</p>\n    </div>\n    <div class=\"nutrients__item\">\n      <p>Protein</p>\n      <p class=\"nutrients__protein\">${round(nutrients[8].amount)}g</p>\n    </div>\n    <div class=\"nutrients__item\">\n      <p>Fat</p>\n      <p class=\"nutrients__fat\">${round(nutrients[1].amount)}g</p>\n    </div>\n  </div>\n  `;\n}\n\nfunction renderList(listItems: string[] | undefined, listItemClass: string): HTMLElement | null {\n  if (listItems === undefined) return null;\n\n  const list = document.createElement('div');\n\n  const categories = listItems.map(item => {\n    const listItem = createElementWithClass('li', listItemClass);\n    listItem.innerHTML = item;\n\n    return listItem;\n  });\n\n  list.append(...categories);\n  return list;\n}\n\nexport { renderRecipe, renderInstructions, renderList };\n","import { IUserResponse } from '../types';\nimport * as userService from '../api/userService';\nimport { ENDPOINTS } from '../config/api.config';\n\nfunction handleSaveFavoriteButtons(cardElement: Element, cardCategory: 'articles' | 'recipes') {\n  const saveButton = cardElement.querySelector('.save-btn') as HTMLButtonElement;\n  const favoriteButton = cardElement.querySelector('.favorite-btn') as HTMLButtonElement;\n\n  saveButton.addEventListener('click', (e: Event) => {\n    const targetButton = e.target as HTMLButtonElement;\n    targetButton.classList.toggle('is-active');\n    const userObject = JSON.parse(localStorage.getItem('user') || 'null');\n    if (userObject) updateUserResources(userObject, cardElement, targetButton, cardCategory, 'saved');\n  });\n\n  favoriteButton.addEventListener('click', (e: Event) => {\n    const targetButton = e.target as HTMLButtonElement;\n    targetButton.classList.toggle('is-active');\n    const userObject = JSON.parse(localStorage.getItem('user') || 'null');\n    if (userObject) updateUserResources(userObject, cardElement, targetButton, cardCategory, 'favorite');\n  });\n}\n\nfunction updateUserResources(\n  userObject: IUserResponse,\n  cardElement: Element,\n  eventTarget: HTMLButtonElement,\n  cardName: 'articles' | 'recipes',\n  cardCategory: 'saved' | 'favorite'\n) {\n  if (eventTarget.classList.contains('is-active')) {\n    userObject[cardName][cardCategory].push(cardElement.id);\n  } else {\n    userObject[cardName][cardCategory] = userObject[cardName][cardCategory].filter(\n      resourceId => resourceId !== cardElement.id\n    );\n  }\n  userService.sendUserData(userObject, ENDPOINTS.userUpdate);\n  localStorage.setItem('user', JSON.stringify(userObject));\n}\n\nexport { handleSaveFavoriteButtons, updateUserResources };\n","import getCookieValue from '../helpers/getCookieValue';\nimport { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\n\nconst getUserData = async (): Promise<IUserResponse | undefined> => {\n  // const tokenValue = getCookieValue('token');\n  const tokenValue = localStorage.getItem('token');\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  if (tokenValue) {\n    const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n      credentials: 'include',\n    })) as IUserResponse;\n    if (response.status === 200) {\n      return (await response.json()) as IUserResponse;\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  } else {\n    signupForm.classList.add('is-open');\n  }\n};\n\nasync function sendUserData(data: IUserResponse, endpoint: string): Promise<Response> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(data),\n  })) as IUserResponse;\n}\n\nasync function logOut() {\n  const response = (await fetch(`${BASE_URL}${ENDPOINTS.userLogout}`, {\n    credentials: 'include',\n  })) as Response;\n  if (response.status === 204) {\n    localStorage.removeItem('userName');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    window.open('./index.html', '_self');\n  }\n}\n\nexport { getUserData, sendUserData, logOut };\n","function getUserName() {\n  (document.querySelector('#user-name') as HTMLElement).textContent = window.localStorage.userName || 'User';\n}\n\nfunction setUserName(userName: string) {\n  window.localStorage.userName = userName;\n  (document.querySelector('#user-name') as HTMLElement).textContent = userName;\n}\n\nexport { getUserName, setUserName };\n","import getCookieValue from './getCookieValue';\nimport { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\nimport { setUserName } from './manageUserName';\n\nfunction setLocalUser(response: IUserResponse) {\n  window.localStorage.setItem('user', JSON.stringify(response));\n}\n\nfunction addUserButtonListener() {\n  const userProfileButton = document.querySelector('.profile-btn') as HTMLButtonElement;\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  userProfileButton.addEventListener('click', async () => {\n    // const tokenValue = getCookieValue('token');\n    const tokenValue = localStorage.getItem('token');\n\n    if (tokenValue) {\n      const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n        credentials: 'include',\n      })) as IUserResponse;\n      if (response.status === 200) {\n        const responseBody = (await response.json()) as IUserResponse;\n        setLocalUser(responseBody);\n        window.open('./user-page.html', '_self');\n      } else {\n        signupForm.classList.add('is-open');\n      }\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  });\n}\n\nfunction addRegisterFormListener() {\n  const form = document.forms[1] as HTMLFormElement;\n  form.addEventListener('submit', handleRegistrationForm);\n}\n\nfunction addSignInFormListener() {\n  const form = document.forms[0] as HTMLFormElement;\n  form.addEventListener('submit', handleLoginForm);\n}\n\nasync function handleRegistrationForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeRegistrationForm(event.target as HTMLFormElement);\n\n  if (formData !== undefined) {\n    const response = await sendUserData(formData, ENDPOINTS.userRegister);\n    if (response.status === 400) {\n      (formElement.querySelector('#user-exist') as HTMLElement).classList.remove('hidden');\n    } else {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Registered successfully!');\n      localStorage.setItem('token', 'true');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nasync function handleLoginForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeLoginForm(event.target as HTMLFormElement);\n\n  const response = await sendUserData(formData, ENDPOINTS.userLogin);\n  switch (response.status) {\n    case 401:\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.add('hidden');\n      break;\n    case 404:\n    case 500:\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.add('hidden');\n      break;\n    case 200: {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Logged in successfully!');\n      localStorage.setItem('token', 'true');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nfunction serializeRegistrationForm(formNode: HTMLFormElement): FormData | undefined {\n  const password = formNode.password.value;\n  const passwordConfirm = formNode['password-confirm'].value;\n  if (password !== passwordConfirm) {\n    (formNode.querySelector('#password-mismatch') as HTMLElement).classList.remove('hidden');\n  } else {\n    (formNode.querySelector('#password-mismatch') as HTMLFormElement).classList.add('hidden');\n    (formNode.querySelector('#user-exist') as HTMLFormElement).classList.add('hidden');\n    return new FormData(formNode);\n  }\n}\n\nfunction serializeLoginForm(formNode: HTMLFormElement): FormData {\n  return new FormData(formNode);\n}\n\nasync function sendUserData(data: FormData, endpoint: string): Promise<IUserResponse> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(Object.fromEntries(data.entries())),\n  })) as IUserResponse;\n}\n\nexport { addUserButtonListener, addRegisterFormListener, addSignInFormListener };\n","import * as articlesService from '../../api/articlesService';\nimport * as recipesService from '../../api/recipesService';\nimport { renderArticle, renderRelevantRecipes } from './render';\nimport { handleSaveFavoriteButtons } from '../../features/cardButtonsHandler';\nimport * as formHandler from '../../helpers/loginFormHandlers';\n\nconst userObject = JSON.parse(localStorage.getItem('user') || 'null');\n\nasync function loadArticle(articleId: string) {\n  const articleData = await articlesService.getArticlesById(articleId);\n  renderArticle(articleData, userObject);\n  if (articleData.relevantRecipes.length > 0) {\n    const recipesData = await Promise.all(\n      articleData.relevantRecipes.map(async recipeId => await recipesService.getRecipeById(String(recipeId)))\n    );\n    renderRelevantRecipes(recipesData, userObject);\n  }\n}\nfunction addListeners() {\n  addArticleButtonsListeners();\n  addRecipeButtonsListeners();\n  formHandler.addUserButtonListener();\n  formHandler.addRegisterFormListener();\n  formHandler.addSignInFormListener();\n}\n\nfunction addArticleButtonsListeners() {\n  const articleButtonsContainer = document.querySelector('.article-container') as HTMLElement;\n  handleSaveFavoriteButtons(articleButtonsContainer, 'articles');\n}\n\nfunction addRecipeButtonsListeners() {\n  const recipes = document.querySelectorAll('.card');\n  recipes.forEach(recipe => {\n    handleSaveFavoriteButtons(recipe, 'recipes');\n  });\n}\n\nexport { loadArticle, addListeners };\n","export const tabHandler = (id: string): void => {\n  const tabNavs: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-nav__item'\n  );\n  const tabContents: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-content__item'\n  );\n  let activeTabName = '';\n\n  tabNavs.forEach(element => element.addEventListener('click', e => setActiveTab(e)));\n  const showActiveTabContent = (tabname: string): void => {\n    tabContents.forEach(element => {\n      element.getAttribute('data-tab-content') === tabname\n        ? element.classList.add('is-active')\n        : element.classList.remove('is-active');\n    });\n  };\n  const setActiveTab = (e: Event): void => {\n    e.preventDefault();\n    tabNavs.forEach(element => element.classList.remove('is-active'));\n    const activeTab = (e.target as HTMLElement).classList.contains('tabs-nav__item')\n      ? (e.target as HTMLElement)\n      : (e.target as HTMLElement).closest('.tabs-nav__item');\n    activeTab?.classList.add('is-active');\n    tabContents.forEach(element => element.classList.remove('is-active'));\n    activeTabName = activeTab?.getAttribute('data-tab-name') as string;\n    showActiveTabContent(activeTabName);\n  };\n};\n","const popupHandler = () => {\n  const underlayer = document.querySelector('.popup__body');\n  underlayer?.addEventListener('click', closeParentPopup);\n};\n\nconst closeParentPopup = (e: Event) => {\n  if (e.target instanceof HTMLElement && !e.target?.closest('.popup__content')) {\n    e.target.closest('.popup')?.classList.remove('is-open');\n  }\n};\n\nexport default popupHandler;\n","import { burgerMenu } from '../../features/burgerMenu';\nimport * as Controller from './controller';\nimport '../../styles/main.scss';\nimport { getUserName } from '../../helpers/manageUserName';\nimport { tabHandler } from '../../features/tabs';\nimport popupHandler from '../../features/popup';\n\nconst queryString = window.location.search;\nconst params = new URLSearchParams(queryString);\nconst articleId = params.get('id') as string;\n\nburgerMenu();\nController.loadArticle(articleId).then(() => Controller.addListeners());\ngetUserName();\npopupHandler();\ntabHandler('forms-container');\n","import { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IArticle, IArticleQueryOptions } from '../types';\n\nimport transformOptionsToQueryString from '../helpers/transformOptionsToQueryString';\n\nconst getArticles = async (queryOptions?: IArticleQueryOptions): Promise<IArticle[]> => {\n  let queryString = '';\n\n  if (queryOptions && Object.keys(queryOptions).length !== 0) {\n    queryString = transformOptionsToQueryString(queryOptions as IArticleQueryOptions);\n  }\n\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.articles}/${queryString}`);\n\n  return ((await response.json()) as unknown) as IArticle[];\n};\n\nconst getArticlesById = async (articleId: string): Promise<IArticle> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.articles}/${articleId}`);\n\n  return ((await response.json()) as unknown) as IArticle;\n};\n\nexport { getArticles, getArticlesById };\n","import { IArticle, IRecipe, IUserResponse } from '../../types';\nimport createElementWithClass from '../../helpers/createElementWithClass';\nimport { renderRecipeCard } from '../../features/renderCards';\nimport { renderList } from '../recipe/render';\nimport checkItemInUserLists from '../../helpers/checkItemInUserLists';\n\nfunction renderArticle(articleData: IArticle, userObject: IUserResponse | null) {\n  const main = document.querySelector('#main') as HTMLElement;\n  const articleContainer = document.createElement('section');\n\n  const date = new Date(articleData.postedAt).toLocaleDateString('en-us', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n  const cardId = String(articleData._id);\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'articles', cardId);\n  const articleCategoriesList = renderList(articleData.category, 'categories__item');\n  const paragraphsList = renderList(articleData.body, 'article__text');\n\n  articleContainer.innerHTML = `\n    <div class=\"container article-container\" id=${cardId}>\n      <div class=\"article__btns\">\n        <button class=\"article__btn_favorite btn_outlined btn-reset favorite-btn\">Add to favorite articles</button>\n        <button class=\"article__btn_save btn_outlined btn-reset save-btn\">Save for later</button>\n      </div>\n      <h1 class=\"article-main__title\">${articleData.title}</h1>\n      <img class=\"article-main__img\" src=${articleData.image} alt=\"article img\">\n      <div class=\"article__meta\">\n        <time class=\"article__date\" datetime=${articleData.postedAt}>${date}</time>\n        <ul class=\"article__categories list-reset\">\n          ${articleCategoriesList?.innerHTML}\n        </ul>\n      </div>\n      <div class=\"article__descr\">\n        ${paragraphsList?.innerHTML}\n      </div>\n    </div>\n  `;\n\n  if (isInSavedList) {\n    (articleContainer.querySelector('.save-btn') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (articleContainer.querySelector('.favorite-btn') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  main.appendChild(articleContainer);\n}\n\nfunction renderRelevantRecipes(recipesData: IRecipe[], userObject: IUserResponse | null) {\n  const main = document.querySelector('#main') as HTMLElement;\n  const recipesContainer = createElementWithClass('section', 'relevant-recipes');\n\n  recipesContainer.innerHTML = `\n    <div class=\"container\">\n      <h2 class=\"relevant-recipes__title\">Relevant recipes</h2>\n      <ul class=\"relevant-recipes__list list-reset\">\n      </ul>\n    </div>\n  `;\n\n  const recipesList = recipesContainer.querySelector('.relevant-recipes__list') as HTMLUListElement;\n\n  const recipesCards = recipesData.map(recipe =>\n    renderRecipeCard(recipe, 'normal', ['recipe__item'], 'li', userObject)\n  );\n\n  recipesList.append(...recipesCards);\n  main.appendChild(recipesContainer);\n}\n\nexport { renderArticle, renderRelevantRecipes };\n","import createElementWithClass from '../helpers/createElementWithClass';\nimport capitalize from '../helpers/capitalize';\nimport checkItemInUserLists from '../helpers/checkItemInUserLists';\nimport { IArticle, ILoadArticleCard, ILoadRecipeCard, IRecipe, IUserResponse } from '../types';\n\nfunction renderRecipeCard(\n  recipeData: IRecipe,\n  size: 'normal' | 'large',\n  classList: string[],\n  elemType: string,\n  userObject: IUserResponse | null\n): HTMLElement {\n  const dishType = capitalize(recipeData.dishTypes[0]) || '';\n  const calories = Math.round(recipeData.nutrition.nutrients[0].amount);\n  const cardId = String(recipeData.id);\n  const cardLink = `./recipe.html?id=${cardId}`;\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'recipes', cardId);\n\n  const cardElementClassNames = size === 'normal' ? classList.concat('card') : classList.concat(['card', 'card_lg']);\n  const cardElement = createElementWithClass(elemType, ...cardElementClassNames) as HTMLLIElement;\n  cardElement.id = cardId;\n  cardElement.innerHTML = `\n    <div class=\"card__header\">\n      <p class=\"card__dish\">${dishType}</p>\n      <div class=\"recipe__btns\">\n        <button class=\"save-recipe btn-reset save-btn\"></button>\n        <button class=\"favorite-recipe btn-reset favorite-btn\"></button>\n      </div>\n    </div>\n    <a class=\"card__img\" href=\"${cardLink}\">\n      <img class=\"card__img\" src=${recipeData.image} alt=${recipeData.title}>\n    </a>\n    <a class=\"card-anchor\" href=${cardLink}>\n      <div class=\"card__meta\">\n        <div class=\"data__time\">\n          <p class=\"time__title\">Cook time</p>\n          <p class=\"time__info\">${recipeData.readyInMinutes} min</p>\n        </div>\n        <div class=\"data__calories\">\n          <p class=\"calories__title\">Calories</p>\n          <p class=\"calories__info\">${calories} kcal</p>\n        </div>\n        <div class=\"data__rating\">\n          <p class=\"rating__title\">Rating</p>\n          <p class=\"rating__info\">${recipeData.aggregateLikes}</p>\n        </div>\n      </div>\n      <div class=\"card__body\">\n        <h3 class=\"card__title\">${recipeData.title}</h3>\n        <p class=\"card__text\">${recipeData.summary}</p>\n      </div>\n    </a>\n  `;\n\n  if (isInSavedList) {\n    (cardElement.querySelector('.save-recipe') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (cardElement.querySelector('.favorite-recipe') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  return cardElement;\n}\n\nfunction renderArticleCard(\n  articleData: IArticle,\n  articleClass: string[],\n  userObject: IUserResponse | null\n): HTMLElement {\n  const date = new Date(articleData.postedAt).toLocaleDateString('en-us', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n  const cardId = String(articleData._id);\n  const articleLink = `./article.html?id=${cardId}`;\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'articles', cardId);\n\n  const articleElement = createElementWithClass('article', ...articleClass) as HTMLElement;\n  articleElement.id = articleData._id;\n  articleElement.innerHTML = `\n    <img class=\"article__img\" src=${articleData.image} alt=\"article preview\">\n    <div class=\"article__content\">\n      <div class=\"article__header\">\n        <time class=\"article__date\" datetime=${articleData.postedAt}>${date}</time>\n        <div class=\"article__btns\">\n          <button class=\"save-article btn-reset save-btn\"></button>\n          <button class=\"favorite-article btn-reset favorite-btn\"></button>\n        </div>\n      </div>\n      <h3 class=\"article__title\">${articleData.title}</h3>\n      <p class=\"article__summary\">${articleData.summary}</p>\n      <a class=\"article__btn btn-reset\" href=${articleLink}>contunue reading</a>\n    </div>\n  `;\n\n  if (isInSavedList) {\n    (articleElement.querySelector('.save-article') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (articleElement.querySelector('.favorite-article') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  return articleElement;\n}\n\nfunction renderItems(\n  itemsData: IArticle[] | IRecipe[],\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  userObject: IUserResponse | null\n) {\n  return itemsData.map((item, itemIndex) => {\n    if ('largeCardIndex' in loadConfig) {\n      const size = itemIndex === loadConfig.largeCardIndex ? 'large' : 'normal';\n      return renderRecipeCard(item as IRecipe, size, loadConfig.cardClassList, loadConfig.listElemType, userObject);\n    }\n\n    return renderArticleCard(item as IArticle, loadConfig.articleClassList, userObject);\n  });\n}\n\nfunction renderCards(\n  itemsData: IArticle[] | IRecipe[],\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  userObject: IUserResponse | null\n) {\n  const sectionContainer = document.querySelector(`.${loadConfig.containerClass}`) as HTMLElement;\n  const sectionContainerList = sectionContainer.querySelector(`.${loadConfig.listClass}`) as HTMLUListElement;\n\n  const itemsCards = renderItems(itemsData, loadConfig, userObject);\n\n  sectionContainerList.innerHTML = '';\n  sectionContainerList.append(...itemsCards);\n}\n\nexport { renderRecipeCard, renderArticleCard, renderCards };\n","function capitalize(string: string) {\n  const words = string.split(' ');\n  const wordsCapitalized = words.map(word => word[0].toUpperCase() + word.slice(1));\n\n  return wordsCapitalized.join(' ');\n}\n\nexport default capitalize;\n","import { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IRecipe, IRecipeQueryOptions } from '../types';\n\nimport transformOptionsToQueryString from '../helpers/transformOptionsToQueryString';\n\nconst getRecipes = async (queryOptions?: IRecipeQueryOptions): Promise<IRecipe[]> => {\n  let queryString = '';\n\n  if (queryOptions && Object.keys(queryOptions).length !== 0) {\n    queryString = transformOptionsToQueryString(queryOptions as IRecipeQueryOptions);\n  }\n\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/${queryString}`);\n\n  return ((await response.json()) as unknown) as IRecipe[];\n};\n\nconst getRecipeById = async (recipeId: string): Promise<IRecipe> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/${recipeId}`);\n\n  return ((await response.json()) as unknown) as IRecipe;\n};\n\nconst getDistinctProps = async (recipePath: string): Promise<string[] | number[]> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/distinct/${recipePath}`);\n\n  return ((await response.json()) as unknown) as string[] | number[];\n};\n\nexport { getRecipes, getRecipeById, getDistinctProps };\n"],"names":["burgerBtn","document","querySelector","menu","menuLinks","querySelectorAll","tagName","classNames","createdElement","createElement","classList","add","userObject","listName","itemId","saved","find","id","favorite","renderList","listItems","listItemClass","undefined","list","categories","map","item","listItem","innerHTML","append","handleSaveFavoriteButtons","cardElement","cardCategory","saveButton","favoriteButton","addEventListener","e","targetButton","target","toggle","JSON","parse","localStorage","getItem","updateUserResources","eventTarget","cardName","contains","push","filter","resourceId","async","data","endpoint","fetch","method","headers","credentials","body","stringify","setItem","setUserName","userName","window","textContent","setLocalUser","response","handleRegistrationForm","event","preventDefault","formElement","formData","formNode","password","value","FormData","remove","serializeRegistrationForm","status","alert","reset","responseBody","json","name","handleLoginForm","Object","fromEntries","entries","closeParentPopup","HTMLElement","closest","queryString","location","search","articleId","URLSearchParams","get","forEach","el","articleData","main","articleContainer","date","Date","postedAt","toLocaleDateString","year","month","day","cardId","String","_id","isInSavedList","isInFavoritesList","articleCategoriesList","category","paragraphsList","title","image","appendChild","renderArticle","relevantRecipes","length","recipesData","recipesContainer","recipesList","recipesCards","recipe","recipeData","size","elemType","dishType","dishTypes","split","word","toUpperCase","slice","join","calories","Math","round","nutrition","nutrients","amount","cardLink","cardElementClassNames","concat","readyInMinutes","aggregateLikes","summary","renderRecipeCard","renderRelevantRecipes","Promise","all","recipeId","then","userProfileButton","signupForm","open","forms","tabNavs","getElementById","tabContents","activeTabName","element","setActiveTab","activeTab","tabname","getAttribute","tabHandler"],"sourceRoot":""}