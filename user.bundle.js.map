{"version":3,"file":"user.bundle.js","mappings":"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","sources":["webpack://my-webpack-project/./src/features/burgerMenu.ts","webpack://my-webpack-project/./src/features/tabs.ts","webpack://my-webpack-project/./src/features/loadCards.ts","webpack://my-webpack-project/./src/config/api.config.js","webpack://my-webpack-project/./src/helpers/transformOptionsToQueryString.ts","webpack://my-webpack-project/./src/api/recipesService.ts","webpack://my-webpack-project/./src/api/articlesService.ts","webpack://my-webpack-project/./src/helpers/createElementWithClass.ts","webpack://my-webpack-project/./src/helpers/checkItemInUserLists.ts","webpack://my-webpack-project/./src/features/renderCards.ts","webpack://my-webpack-project/./src/helpers/capitalize.ts","webpack://my-webpack-project/./src/helpers/getCookieValue.ts","webpack://my-webpack-project/./src/helpers/manageUserName.ts","webpack://my-webpack-project/./src/helpers/loginFormHandlers.ts","webpack://my-webpack-project/./src/pages/user/controller.ts","webpack://my-webpack-project/./src/features/userpageButtonHandlers.ts","webpack://my-webpack-project/./src/api/userService.ts","webpack://my-webpack-project/./src/features/popup.ts","webpack://my-webpack-project/./src/features/productHandlerHelpers.ts","webpack://my-webpack-project/./src/constants.ts","webpack://my-webpack-project/./src/features/productListInputHandler.ts","webpack://my-webpack-project/./src/pages/user/index.ts","webpack://my-webpack-project/./src/pages/user/render.ts","webpack://my-webpack-project/./src/features/productListControlsHandler.ts"],"sourcesContent":["const burgerBtn = document.querySelector('.burger') as HTMLElement;\nconst menu = document.querySelector('.navbar__list') as HTMLElement;\nconst menuLinks = [...document.querySelectorAll('.nav__link')] as HTMLElement[];\n\nexport const burgerMenu = () => {\n  burgerBtn.addEventListener('click', () => {\n    burgerBtn.classList.toggle('burger_open');\n    menu.classList.toggle('navbar__list_open');\n  });\n\n  menuLinks.forEach((el: HTMLElement) => {\n    el.addEventListener('click', () => {\n      burgerBtn.classList.remove('burger_open');\n      menu.classList.remove('navbar__list_open');\n    });\n  });\n};\n","export const tabHandler = (id: string): void => {\n  const tabNavs: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-nav__item'\n  );\n  const tabContents: NodeListOf<HTMLElement> = (document.getElementById(id) as HTMLElement).querySelectorAll(\n    '.tabs-content__item'\n  );\n  let activeTabName = '';\n\n  tabNavs.forEach(element => element.addEventListener('click', e => setActiveTab(e)));\n  const showActiveTabContent = (tabname: string): void => {\n    tabContents.forEach(element => {\n      element.getAttribute('data-tab-content') === tabname\n        ? element.classList.add('is-active')\n        : element.classList.remove('is-active');\n    });\n  };\n  const setActiveTab = (e: Event): void => {\n    e.preventDefault();\n    tabNavs.forEach(element => element.classList.remove('is-active'));\n    const activeTab = (e.target as HTMLElement).classList.contains('tabs-nav__item')\n      ? (e.target as HTMLElement)\n      : (e.target as HTMLElement).closest('.tabs-nav__item');\n    activeTab?.classList.add('is-active');\n    tabContents.forEach(element => element.classList.remove('is-active'));\n    activeTabName = activeTab?.getAttribute('data-tab-name') as string;\n    showActiveTabContent(activeTabName);\n  };\n};\n","import { IArticle, ILoadArticleCard, ILoadRecipeCard, IRecipe } from '../types';\nimport * as articlesService from '../api/articlesService';\nimport * as recipesService from '../api/recipesService';\n\nasync function loadCardsContent(\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  contentLoadingService: typeof articlesService.getArticles | typeof recipesService.getRecipes\n): Promise<IArticle[] | IRecipe[]> {\n  return await contentLoadingService(loadConfig.queryOptions);\n}\n\nexport default loadCardsContent;\n","const BASE_URL = 'https://rs-recipes-server.herokuapp.com';\n\nconst ENDPOINTS = {\n  recipes: '/recipes',\n  recipesDistinctProps: '/recipes/distinct',\n  articles: '/articles',\n  userRegister: '/user/register',\n  userLogin: '/user/login',\n  userLogout: '/user/logout',\n  userProfile: '/user/profile',\n  userUpdate: '/user/update',\n};\n\nexport { BASE_URL, ENDPOINTS };\n","import { IRecipeQueryOptions, IArticleQueryOptions } from '../types.js';\n\nconst transformOptionsToQueryString = (queryOptions: IRecipeQueryOptions | IArticleQueryOptions) => {\n  const queryStringArray: string[] = [];\n\n  for (const [optionProp, optionValue] of Object.entries(queryOptions)) {\n    switch (typeof optionProp) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        queryStringArray.push(`${optionProp}=${optionValue}`);\n        break;\n\n      case 'object':\n        queryStringArray.push(`${optionProp}=${optionValue.join(',')}`);\n        break;\n    }\n  }\n\n  return '?' + queryStringArray.join('&');\n};\n\nexport default transformOptionsToQueryString;\n","import { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IRecipe, IRecipeQueryOptions } from '../types';\n\nimport transformOptionsToQueryString from '../helpers/transformOptionsToQueryString';\n\nconst getRecipes = async (queryOptions?: IRecipeQueryOptions): Promise<IRecipe[]> => {\n  let queryString = '';\n\n  if (queryOptions && Object.keys(queryOptions).length !== 0) {\n    queryString = transformOptionsToQueryString(queryOptions as IRecipeQueryOptions);\n  }\n\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/${queryString}`);\n\n  return ((await response.json()) as unknown) as IRecipe[];\n};\n\nconst getRecipeById = async (recipeId: string): Promise<IRecipe> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/${recipeId}`);\n\n  return ((await response.json()) as unknown) as IRecipe;\n};\n\nconst getDistinctProps = async (recipePath: string): Promise<string[] | number[]> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.recipes}/distinct/${recipePath}`);\n\n  return ((await response.json()) as unknown) as string[] | number[];\n};\n\nexport { getRecipes, getRecipeById, getDistinctProps };\n","import { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IArticle, IArticleQueryOptions } from '../types';\n\nimport transformOptionsToQueryString from '../helpers/transformOptionsToQueryString';\n\nconst getArticles = async (queryOptions?: IArticleQueryOptions): Promise<IArticle[]> => {\n  let queryString = '';\n\n  if (queryOptions && Object.keys(queryOptions).length !== 0) {\n    queryString = transformOptionsToQueryString(queryOptions as IArticleQueryOptions);\n  }\n\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.articles}/${queryString}`);\n\n  return ((await response.json()) as unknown) as IArticle[];\n};\n\nconst getArticlesById = async (articleId: string): Promise<IArticle> => {\n  const response = await fetch(`${BASE_URL}${ENDPOINTS.articles}/${articleId}`);\n\n  return ((await response.json()) as unknown) as IArticle;\n};\n\nexport { getArticles, getArticlesById };\n","function createElemWithClass(tagName: string, ...classNames: string[]): HTMLElement {\n  const createdElement = document.createElement(tagName);\n  createdElement.classList.add(...classNames);\n\n  return createdElement;\n}\n\nexport default createElemWithClass;\n","import { IUserResponse } from '../types';\n\nfunction checkItemInUserLists(userObject: IUserResponse | null, listName: 'recipes' | 'articles', itemId: string) {\n  if (!userObject) return [false, false];\n\n  const isInSavedList = userObject[listName].saved.find(id => id === itemId);\n  const isInFavoritesList = userObject[listName].favorite.find(id => id === itemId);\n\n  return [!!isInSavedList, !!isInFavoritesList];\n}\n\nexport default checkItemInUserLists;\n","import createElementWithClass from '../helpers/createElementWithClass';\nimport capitalize from '../helpers/capitalize';\nimport checkItemInUserLists from '../helpers/checkItemInUserLists';\nimport { IArticle, ILoadArticleCard, ILoadRecipeCard, IRecipe, IUserResponse } from '../types';\n\nfunction renderRecipeCard(\n  recipeData: IRecipe,\n  size: 'normal' | 'large',\n  classList: string[],\n  elemType: string,\n  userObject: IUserResponse | null\n): HTMLElement {\n  const dishType = capitalize(recipeData.dishTypes[0]) || '';\n  const calories = Math.round(recipeData.nutrition.nutrients[0].amount);\n  const cardId = String(recipeData.id);\n  const cardLink = `./recipe.html?id=${cardId}`;\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'recipes', cardId);\n\n  const cardElementClassNames = size === 'normal' ? classList.concat('card') : classList.concat(['card', 'card_lg']);\n  const cardElement = createElementWithClass(elemType, ...cardElementClassNames) as HTMLLIElement;\n  cardElement.id = cardId;\n  cardElement.innerHTML = `\n    <div class=\"card__header\">\n      <p class=\"card__dish\">${dishType}</p>\n      <div class=\"recipe__btns\">\n        <button class=\"save-recipe btn-reset save-btn\"></button>\n        <button class=\"favorite-recipe btn-reset favorite-btn\"></button>\n      </div>\n    </div>\n    <a class=\"card__img\" href=\"${cardLink}\">\n      <img class=\"card__img\" src=${recipeData.image} alt=${recipeData.title}>\n    </a>\n    <a class=\"card-anchor\" href=${cardLink}>\n      <div class=\"card__meta\">\n        <div class=\"data__time\">\n          <p class=\"time__title\">Cook time</p>\n          <p class=\"time__info\">${recipeData.readyInMinutes} min</p>\n        </div>\n        <div class=\"data__calories\">\n          <p class=\"calories__title\">Calories</p>\n          <p class=\"calories__info\">${calories} kcal</p>\n        </div>\n        <div class=\"data__rating\">\n          <p class=\"rating__title\">Rating</p>\n          <p class=\"rating__info\">${recipeData.aggregateLikes}</p>\n        </div>\n      </div>\n      <div class=\"card__body\">\n        <h3 class=\"card__title\">${recipeData.title}</h3>\n        <p class=\"card__text\">${recipeData.summary}</p>\n      </div>\n    </a>\n  `;\n\n  if (isInSavedList) {\n    (cardElement.querySelector('.save-recipe') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (cardElement.querySelector('.favorite-recipe') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  return cardElement;\n}\n\nfunction renderArticleCard(\n  articleData: IArticle,\n  articleClass: string[],\n  userObject: IUserResponse | null\n): HTMLElement {\n  const date = new Date(articleData.postedAt).toLocaleDateString('en-us', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n  const cardId = String(articleData._id);\n  const articleLink = `./article.html?id=${cardId}`;\n  const [isInSavedList, isInFavoritesList] = checkItemInUserLists(userObject, 'articles', cardId);\n\n  const articleElement = createElementWithClass('article', ...articleClass) as HTMLElement;\n  articleElement.id = articleData._id;\n  articleElement.innerHTML = `\n    <img class=\"article__img\" src=${articleData.image} alt=\"article preview\">\n    <div class=\"article__content\">\n      <div class=\"article__header\">\n        <time class=\"article__date\" datetime=${articleData.postedAt}>${date}</time>\n        <div class=\"article__btns\">\n          <button class=\"save-article btn-reset save-btn\"></button>\n          <button class=\"favorite-article btn-reset favorite-btn\"></button>\n        </div>\n      </div>\n      <h3 class=\"article__title\">${articleData.title}</h3>\n      <p class=\"article__summary\">${articleData.summary}</p>\n      <a class=\"article__btn btn-reset\" href=${articleLink}>contunue reading</a>\n    </div>\n  `;\n\n  if (isInSavedList) {\n    (articleElement.querySelector('.save-article') as HTMLButtonElement).classList.add('is-active');\n  }\n  if (isInFavoritesList) {\n    (articleElement.querySelector('.favorite-article') as HTMLButtonElement).classList.add('is-active');\n  }\n\n  return articleElement;\n}\n\nfunction renderItems(\n  itemsData: IArticle[] | IRecipe[],\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  userObject: IUserResponse | null\n) {\n  return itemsData.map((item, itemIndex) => {\n    if ('largeCardIndex' in loadConfig) {\n      const size = itemIndex === loadConfig.largeCardIndex ? 'large' : 'normal';\n      return renderRecipeCard(item as IRecipe, size, loadConfig.cardClassList, loadConfig.listElemType, userObject);\n    }\n\n    return renderArticleCard(item as IArticle, loadConfig.articleClassList, userObject);\n  });\n}\n\nfunction renderCards(\n  itemsData: IArticle[] | IRecipe[],\n  loadConfig: ILoadRecipeCard | ILoadArticleCard,\n  userObject: IUserResponse | null\n) {\n  const sectionContainer = document.querySelector(`.${loadConfig.containerClass}`) as HTMLElement;\n  const sectionContainerList = sectionContainer.querySelector(`.${loadConfig.listClass}`) as HTMLUListElement;\n\n  const itemsCards = renderItems(itemsData, loadConfig, userObject);\n\n  sectionContainerList.innerHTML = '';\n  sectionContainerList.append(...itemsCards);\n}\n\nexport { renderRecipeCard, renderArticleCard, renderCards };\n","function capitalize(string: string) {\n  const words = string.split(' ');\n  const wordsCapitalized = words.map(word => word[0].toUpperCase() + word.slice(1));\n\n  return wordsCapitalized.join(' ');\n}\n\nexport default capitalize;\n","function getCookieValue(cookieKey: string) {\n  return document.cookie\n    .split('; ')\n    .find(cookie => cookie.startsWith(`${cookieKey}=`))\n    ?.split('=')[1];\n}\n\nexport default getCookieValue;\n","function getUserName() {\n  (document.querySelector('#user-name') as HTMLElement).textContent = window.localStorage.userName || 'User';\n}\n\nfunction setUserName(userName: string) {\n  window.localStorage.userName = userName;\n  (document.querySelector('#user-name') as HTMLElement).textContent = userName;\n}\n\nexport { getUserName, setUserName };\n","import getCookieValue from './getCookieValue';\nimport { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\nimport { setUserName } from './manageUserName';\n\nfunction setLocalUser(response: IUserResponse) {\n  window.localStorage.setItem('user', JSON.stringify(response));\n}\n\nfunction addUserButtonListener() {\n  const userProfileButton = document.querySelector('.profile-btn') as HTMLButtonElement;\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  userProfileButton.addEventListener('click', async () => {\n    const tokenValue = getCookieValue('token');\n\n    if (tokenValue) {\n      const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n        credentials: 'include',\n      })) as IUserResponse;\n      if (response.status === 200) {\n        const responseBody = (await response.json()) as IUserResponse;\n        setLocalUser(responseBody);\n        window.open('./user-page.html', '_self');\n      } else {\n        signupForm.classList.add('is-open');\n      }\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  });\n}\n\nfunction addRegisterFormListener() {\n  const form = document.forms[1] as HTMLFormElement;\n  form.addEventListener('submit', handleRegistrationForm);\n}\n\nfunction addSignInFormListener() {\n  const form = document.forms[0] as HTMLFormElement;\n  form.addEventListener('submit', handleLoginForm);\n}\n\nasync function handleRegistrationForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeRegistrationForm(event.target as HTMLFormElement);\n\n  if (formData !== undefined) {\n    const response = await sendUserData(formData, ENDPOINTS.userRegister);\n    if (response.status === 400) {\n      (formElement.querySelector('#user-exist') as HTMLElement).classList.remove('hidden');\n    } else {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Registered successfully!');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nasync function handleLoginForm(event: Event) {\n  event.preventDefault();\n  const formElement = event.target as HTMLFormElement;\n  const formData = serializeLoginForm(event.target as HTMLFormElement);\n\n  const response = await sendUserData(formData, ENDPOINTS.userLogin);\n  switch (response.status) {\n    case 401:\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.add('hidden');\n      break;\n    case 404:\n    case 500:\n      (formElement.querySelector('#user-not-found') as HTMLElement).classList.remove('hidden');\n      (formElement.querySelector('#wrong-password') as HTMLElement).classList.add('hidden');\n      break;\n    case 200: {\n      (document.querySelector('.popup') as HTMLElement).classList.remove('is-open');\n      alert('Logged in successfully!');\n      formElement.reset();\n      const responseBody = (await response.json()) as IUserResponse;\n      setLocalUser(responseBody);\n      setUserName(responseBody.name);\n    }\n  }\n}\n\nfunction serializeRegistrationForm(formNode: HTMLFormElement): FormData | undefined {\n  const password = formNode.password.value;\n  const passwordConfirm = formNode['password-confirm'].value;\n  if (password !== passwordConfirm) {\n    (formNode.querySelector('#password-mismatch') as HTMLElement).classList.remove('hidden');\n  } else {\n    (formNode.querySelector('#password-mismatch') as HTMLFormElement).classList.add('hidden');\n    (formNode.querySelector('#user-exist') as HTMLFormElement).classList.add('hidden');\n    return new FormData(formNode);\n  }\n}\n\nfunction serializeLoginForm(formNode: HTMLFormElement): FormData {\n  return new FormData(formNode);\n}\n\nasync function sendUserData(data: FormData, endpoint: string): Promise<IUserResponse> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(Object.fromEntries(data.entries())),\n  })) as IUserResponse;\n}\n\nexport { addUserButtonListener, addRegisterFormListener, addSignInFormListener };\n","import loadCardsContent from '../../features/loadCards';\nimport * as recipesService from '../../api/recipesService';\nimport * as articlesService from '../../api/articlesService';\nimport {\n  IArticleQueryOptions,\n  ILoadUserArticles,\n  ILoadUserRecipes,\n  IRecipeQueryOptions,\n  IUserResponse,\n} from '../../types';\nimport { renderCards } from '../../features/renderCards';\nimport { getUserData, logOut } from '../../api/userService';\nimport * as userService from '../../api/userService';\nimport { ENDPOINTS } from '../../config/api.config';\nimport userpageControlsHandler from '../../features/userpageButtonHandlers';\nimport * as formHandler from '../../helpers/loginFormHandlers';\n\nasync function fetchUserData(): Promise<IUserResponse | undefined> {\n  return await getUserData();\n}\n\nfunction createQueryConfigs(userData: IUserResponse | undefined): (ILoadUserRecipes | ILoadUserArticles)[] | undefined {\n  if (userData !== undefined) {\n    const initRecipesSavedQueryOptions: IRecipeQueryOptions = {\n      page: 0,\n      limit: 10,\n      id: userData.recipes.saved,\n    };\n\n    const initRecipesFavoriteQueryOptions: IRecipeQueryOptions = {\n      page: 0,\n      limit: 10,\n      id: userData.recipes.favorite,\n    };\n\n    const initArticlesSavedQueryOptions: IArticleQueryOptions = {\n      page: 0,\n      limit: 8,\n      id: userData.articles.saved,\n    };\n\n    const initArticlesFavoriteQueryOptions: IArticleQueryOptions = {\n      page: 0,\n      limit: 8,\n      id: userData.articles.favorite,\n    };\n\n    const recipesLoadConfig: ILoadUserRecipes[] = [\n      {\n        saved: {\n          containerClass: 'recipes-saved',\n          listClass: 'recipes__list',\n          listElemType: 'li',\n          cardClassList: ['recipe__item'],\n          queryOptions: initRecipesSavedQueryOptions,\n          largeCardIndex: -1,\n        },\n        favorite: {\n          containerClass: 'recipes-favorite',\n          listClass: 'recipes__list',\n          listElemType: 'li',\n          cardClassList: ['recipe__item'],\n          queryOptions: initRecipesFavoriteQueryOptions,\n          largeCardIndex: -1,\n        },\n      },\n    ];\n\n    const articlesLoadConfig: ILoadUserArticles[] = [\n      {\n        saved: {\n          containerClass: 'articles-saved',\n          listClass: 'articles__list',\n          articleClassList: ['article'],\n          queryOptions: initArticlesSavedQueryOptions,\n        },\n        favorite: {\n          containerClass: 'articles-favorite',\n          listClass: 'articles__list',\n          articleClassList: ['article'],\n          queryOptions: initArticlesFavoriteQueryOptions,\n        },\n      },\n    ];\n\n    return [...recipesLoadConfig, ...articlesLoadConfig];\n  }\n}\n\nasync function loadPageContent(recipesLoadConfig: ILoadUserRecipes, articlesLoadConfig: ILoadUserArticles) {\n  const userObject = JSON.parse(localStorage.getItem('user') || 'null');\n\n  await renderLoadedSections(userObject, recipesLoadConfig, articlesLoadConfig);\n}\n\nfunction addListeners() {\n  userpageControlsHandler();\n  addLogoutButtonListener();\n  addArticleButtonsListeners();\n  addRecipeButtonsListeners();\n  formHandler.addUserButtonListener();\n  formHandler.addRegisterFormListener();\n  formHandler.addSignInFormListener();\n}\n\nconst logoutButton = document.getElementById('logout-btn') as HTMLElement;\n\nfunction addLogoutButtonListener() {\n  logoutButton.addEventListener('click', () => logOut());\n}\n\nfunction addArticleButtonsListeners() {\n  const articles = document.querySelectorAll('.article');\n  articles.forEach(article => {\n    handleSaveFavoriteButtonsUser(article, 'articles');\n  });\n}\n\nfunction addRecipeButtonsListeners() {\n  const recipes = document.querySelectorAll('.card');\n  recipes.forEach(recipe => {\n    handleSaveFavoriteButtonsUser(recipe, 'recipes');\n  });\n}\n\nfunction handleSaveFavoriteButtonsUser(cardElement: Element, cardCategory: 'articles' | 'recipes') {\n  const saveButton = cardElement.querySelector('.save-btn') as HTMLButtonElement;\n  const favoriteButton = cardElement.querySelector('.favorite-btn') as HTMLButtonElement;\n\n  saveButton.addEventListener('click', (e: Event) => {\n    const targetButton = e.target as HTMLButtonElement;\n    targetButton.classList.toggle('is-active');\n    const userObject = JSON.parse(localStorage.getItem('user') as string);\n    updateUserResources(userObject, cardElement, targetButton, cardCategory, 'saved');\n  });\n\n  favoriteButton.addEventListener('click', (e: Event) => {\n    const targetButton = e.target as HTMLButtonElement;\n    targetButton.classList.toggle('is-active');\n    const userObject = JSON.parse(localStorage.getItem('user') as string);\n    updateUserResources(userObject, cardElement, targetButton, cardCategory, 'favorite');\n  });\n}\n\nasync function updateUserResources(\n  userObject: IUserResponse,\n  cardElement: Element,\n  eventTarget: HTMLButtonElement,\n  cardName: 'articles' | 'recipes',\n  cardCategory: 'saved' | 'favorite'\n) {\n  if (eventTarget.classList.contains('is-active')) {\n    userObject[cardName][cardCategory].push(cardElement.id);\n  } else {\n    userObject[cardName][cardCategory] = userObject[cardName][cardCategory].filter(\n      resourceId => resourceId !== cardElement.id\n    );\n  }\n  userService.sendUserData(userObject, ENDPOINTS.userUpdate);\n  localStorage.setItem('user', JSON.stringify(userObject));\n  clearTabsContent();\n  await rerenderUserItems(userObject);\n  addArticleButtonsListeners();\n  addRecipeButtonsListeners();\n}\n\nfunction clearTabsContent() {\n  const recipesList = document.querySelectorAll('.recipes__list') as NodeListOf<HTMLElement>;\n  const articlesList = document.querySelectorAll('.articles__list') as NodeListOf<HTMLElement>;\n  recipesList.forEach(container => (container.innerHTML = ''));\n  articlesList.forEach(container => (container.innerHTML = ''));\n}\n\nasync function rerenderUserItems(userObject: IUserResponse) {\n  const configs = createQueryConfigs(userObject) as (ILoadUserRecipes | ILoadUserArticles)[];\n  const recipesLoadConfig = configs[0] as ILoadUserRecipes;\n  const articlesLoadConfig = configs[1] as ILoadUserArticles;\n\n  await renderLoadedSections(userObject, recipesLoadConfig, articlesLoadConfig);\n}\n\nasync function renderLoadedSections(\n  userObject: IUserResponse | null,\n  recipesLoadConfig: ILoadUserRecipes,\n  articlesLoadConfig: ILoadUserArticles\n) {\n  const emptyRecipesSaved = document.querySelector('#empty-recipes-saved') as HTMLElement;\n  const emptyRecipesFavorite = document.querySelector('#empty-recipes-favorite') as HTMLElement;\n  const emptyArticlesSaved = document.querySelector('#empty-articles-saved') as HTMLElement;\n  const emptyArticlesFavorite = document.querySelector('#empty-articles-favorite') as HTMLElement;\n\n  if (recipesLoadConfig.saved.queryOptions.id?.length) {\n    const savedRecipes = await loadCardsContent(recipesLoadConfig.saved, recipesService.getRecipes);\n    renderCards(savedRecipes, recipesLoadConfig.saved, userObject);\n    emptyRecipesSaved.classList.add('hidden');\n  } else {\n    emptyRecipesSaved.classList.remove('hidden');\n  }\n\n  if (recipesLoadConfig.favorite.queryOptions.id?.length) {\n    const favoriteRecipes = await loadCardsContent(recipesLoadConfig.favorite, recipesService.getRecipes);\n    renderCards(favoriteRecipes, recipesLoadConfig.favorite, userObject);\n    emptyRecipesFavorite.classList.add('hidden');\n  } else {\n    emptyRecipesFavorite.classList.remove('hidden');\n  }\n\n  if (articlesLoadConfig.saved.queryOptions.id?.length) {\n    const savedArticles = await loadCardsContent(articlesLoadConfig.saved, articlesService.getArticles);\n    renderCards(savedArticles, articlesLoadConfig.saved, userObject);\n    emptyArticlesSaved.classList.add('hidden');\n  } else {\n    emptyArticlesSaved.classList.remove('hidden');\n  }\n\n  if (articlesLoadConfig.favorite.queryOptions.id?.length) {\n    const favoriteArticles = await loadCardsContent(articlesLoadConfig.favorite, articlesService.getArticles);\n    renderCards(favoriteArticles, articlesLoadConfig.favorite, userObject);\n    emptyArticlesFavorite.classList.add('hidden');\n  } else {\n    emptyArticlesFavorite.classList.remove('hidden');\n  }\n}\n\nexport { fetchUserData, createQueryConfigs, loadPageContent, addListeners };\n","import { tabHandler } from './tabs';\n\nconst userpageControlsHandler = (): void => {\n  const userpageControlsHolder = document.getElementById('userpage-controls') as HTMLElement;\n  const userpageControls = userpageControlsHolder.querySelectorAll('.tabs-btn');\n  const pageContents = document.querySelectorAll('.tabs');\n\n  userpageControls.forEach(control => {\n    control.addEventListener('click', () => {\n      userpageControls.forEach(el => {\n        el.classList.remove('btn-active');\n      });\n      control.classList.add('btn-active');\n      const activeContentId = control?.getAttribute('data-link-to') as string;\n      showActiveContent(activeContentId);\n    });\n  });\n\n  function showActiveContent(activeContentId: string): void {\n    pageContents.forEach(content => {\n      content.id === activeContentId ? content.classList.remove('hidden') : content.classList.add('hidden');\n      tabHandler(content.id);\n    });\n  }\n};\n\nexport default userpageControlsHandler;\n","import getCookieValue from '../helpers/getCookieValue';\nimport { BASE_URL, ENDPOINTS } from '../config/api.config';\nimport { IUserResponse } from '../types';\n\nconst getUserData = async (): Promise<IUserResponse | undefined> => {\n  const tokenValue = getCookieValue('token');\n  const signupForm = document.querySelector('.popup') as HTMLElement;\n\n  if (tokenValue) {\n    const response = (await fetch(`${BASE_URL}${ENDPOINTS.userProfile}`, {\n      credentials: 'include',\n    })) as IUserResponse;\n    if (response.status === 200) {\n      return (await response.json()) as IUserResponse;\n    } else {\n      signupForm.classList.add('is-open');\n    }\n  } else {\n    signupForm.classList.add('is-open');\n  }\n};\n\nasync function sendUserData(data: IUserResponse, endpoint: string): Promise<Response> {\n  return (await fetch(`${BASE_URL}${endpoint}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include',\n    body: JSON.stringify(data),\n  })) as IUserResponse;\n}\n\nasync function logOut() {\n  const response = (await fetch(`${BASE_URL}${ENDPOINTS.userLogout}`, {\n    credentials: 'include',\n  })) as Response;\n  if (response.status === 204) {\n    localStorage.removeItem('userName');\n    window.open('./index.html', '_self');\n  }\n}\n\nexport { getUserData, sendUserData, logOut };\n","const popupHandler = () => {\n  const underlayer = document.querySelector('.popup__body');\n  underlayer?.addEventListener('click', closeParentPopup);\n};\n\nconst closeParentPopup = (e: Event) => {\n  if (e.target instanceof HTMLElement && !e.target?.closest('.popup__content')) {\n    e.target.closest('.popup')?.classList.remove('is-open');\n  }\n};\n\nexport default popupHandler;\n","export const deleteProduct = (e: Event): void => {\n  const target = e.target as HTMLElement;\n  const targetProduct = target.closest('.products-list__item') as Node;\n  const parentList = target.closest('.products-list') as HTMLElement;\n\n  parentList.removeChild(targetProduct);\n  checkIfEmpty(parentList);\n};\n\nexport const moveToStockedHandler = (e: Event): void => {\n  const shoppingList = document.querySelector('.products-list_needed') as HTMLElement;\n  const stockedList = document.querySelector('.products-list_stocked') as HTMLElement;\n  const target = e.target as HTMLElement;\n  const targetProduct = target.closest('.products-list__item') as HTMLElement;\n  const productName = (targetProduct.querySelector('span') as HTMLElement).innerText.toLowerCase().trim();\n\n  const stockedProductNameElems = stockedList.querySelectorAll('.product');\n  const stockedProductNames: string[] = [];\n  stockedProductNameElems.forEach(elem => {\n    stockedProductNames.push((elem as HTMLElement).innerText.trim().toLowerCase());\n  });\n  if (stockedProductNames.includes(productName)) {\n    shoppingList?.removeChild(targetProduct);\n    checkIfEmpty(shoppingList);\n  } else {\n    shoppingList?.removeChild(targetProduct);\n    stockedList?.append(targetProduct);\n    checkIfEmpty(shoppingList);\n    checkIfEmpty(stockedList);\n  }\n};\n\nexport const filterOptions = (options: string[], value: string): string[] => {\n  return options.filter(item => item.includes(value));\n};\n\nexport const checkIfEmpty = (list: HTMLElement): void => {\n  if (list?.querySelectorAll('.products-list__item')?.length === 0) {\n    list?.querySelector('.message')?.classList.remove('hidden');\n  } else {\n    list?.querySelector('.message')?.classList.add('hidden');\n  }\n};\n","//TODO: MOCK_INGREDIENTS have to be replaced by ingredients from DB\nexport const MOCK_INGREDIENTS = [\n  'apple',\n  'banana',\n  'tangerine',\n  'lemon',\n  'beef',\n  'citric acid',\n  'baking soda',\n  'pineapple',\n  'flour',\n  'onion',\n  'mango',\n  'rice',\n  'pasta',\n  'buckwheat',\n  'lemongrass',\n].sort();\n\nexport const EMPTY_MESSAGE = \"You haven't added anything yet...\";\n","import createElemWithClass from '../helpers/createElementWithClass';\nimport { MOCK_INGREDIENTS } from '../constants';\nimport { checkIfEmpty, deleteProduct, filterOptions, moveToStockedHandler } from './productHandlerHelpers';\n\nconst addListenersToUserInput = (id: string): void => {\n  const selectWrapper = document.getElementById(id) as HTMLElement;\n  const inputElem = selectWrapper.querySelector('.products-input') as HTMLInputElement;\n  const selectOptionsHolder = selectWrapper.querySelector('.scrolling-area') as HTMLElement;\n  const dropdownMenu = selectWrapper.querySelector('.product-options') as HTMLElement;\n  const addedProductsList = (selectWrapper.parentElement as HTMLElement).querySelector('.products-list') as HTMLElement;\n\n  let dropdownProducts = MOCK_INGREDIENTS;\n\n  checkIfEmpty(addedProductsList);\n\n  renderProductOptions(selectOptionsHolder, dropdownProducts);\n  inputElem.addEventListener('click', () => {\n    renderProductOptions(selectOptionsHolder, dropdownProducts);\n    dropdownMenu.classList.add('is-active');\n  });\n\n  document.body.addEventListener('click', e => {\n    const target = e.target as HTMLElement;\n    if (!target.classList.contains('product-options__item') && !target.classList.contains('products-input')) {\n      dropdownMenu.classList.remove('is-active');\n    }\n  });\n\n  inputElem.addEventListener('keypress', e => {\n    if (e.key === 'Enter') {\n      const productName = inputElem.value.trim();\n      addToList(productName, addedProductsList);\n      dropdownProducts = dropdownProducts.filter(item => item !== productName.toLowerCase());\n      renderProductOptions(selectOptionsHolder, dropdownProducts);\n      inputElem.value = '';\n      dropdownMenu.classList.remove('is-active');\n    }\n  });\n\n  selectOptionsHolder.addEventListener('click', e => {\n    const target = e.target as HTMLElement;\n    if (target.classList.contains('product-options__item')) {\n      const productName = target.innerText;\n      addToList(productName, addedProductsList);\n      dropdownProducts = dropdownProducts.filter(item => item !== productName);\n      inputElem.value = '';\n      renderProductOptions(selectOptionsHolder, dropdownProducts);\n      inputElem.focus();\n    }\n  });\n\n  inputElem.addEventListener('input', () => {\n    dropdownMenu.classList.add('is-active');\n    const relevantIngredients = filterOptions(dropdownProducts, inputElem.value.trim().toLocaleLowerCase());\n    relevantIngredients.length\n      ? renderProductOptions(selectOptionsHolder, relevantIngredients)\n      : renderMessage(\n          'It seems like our recipes do not contain this product as ingredient, but you can add it to your shopping list'\n        );\n  });\n\n  function createListItem(product: string): HTMLElement {\n    const listItem = createElemWithClass('li', 'products-list__item');\n    listItem.innerHTML = `\n      <span class=\"product\">${product}</span> \n      <div class=\"product__controls product-controls\"> \n        <div class=\"product-controls__add-btn\"></div> \n        <div class=\"product-controls__delete-btn\"></div>\n      </div> \n    `;\n    listItem.querySelector('.product-controls__delete-btn')?.addEventListener('click', e => {\n      deleteProduct(e);\n      checkIfEmpty(listItem.closest('.products-list') as HTMLElement);\n      const target = e.target as HTMLElement;\n      const productName = (target.closest('.products-list__item') as HTMLElement)?.innerText.trim().toLowerCase();\n      if (MOCK_INGREDIENTS.includes(productName) && !dropdownProducts.includes(productName)) {\n        dropdownProducts.push(productName);\n        dropdownProducts.sort();\n        renderProductOptions(selectOptionsHolder, dropdownProducts);\n      }\n    });\n    listItem.querySelector('.product-controls__add-btn')?.addEventListener('click', e => moveToStockedHandler(e));\n    return listItem;\n  }\n\n  function addToList(product: string, list: HTMLElement): void {\n    const listItem = createListItem(product);\n    list.append(listItem);\n    checkIfEmpty(list);\n  }\n\n  function renderMessage(message: string): void {\n    selectOptionsHolder.innerText = message;\n  }\n};\n\naddListenersToUserInput('products-needed');\naddListenersToUserInput('products-stocked');\n\nfunction renderProductOptions(optionsHolder: HTMLElement, options: string[]): void {\n  optionsHolder.innerHTML = '';\n  const addedOptionElems = (optionsHolder.closest('.tabs-content__item') as HTMLElement).querySelectorAll(\n    '.products-list__item'\n  );\n\n  const addedProducts: string[] = [];\n  addedOptionElems.forEach(element => {\n    addedProducts.push((element as HTMLElement).innerText);\n  });\n\n  options.forEach(item => {\n    if (!addedProducts.includes(item)) {\n      const listElem = createElemWithClass('li', 'product-options__item');\n      listElem.id = item;\n      listElem.innerText = item;\n      optionsHolder.append(listElem);\n    }\n  });\n}\n","import { burgerMenu } from '../../features/burgerMenu';\nimport { tabHandler } from '../../features/tabs';\nimport '../../styles/main.scss';\nimport * as Controller from './controller';\nimport * as Render from './render';\nimport { ILoadUserArticles, ILoadUserRecipes } from '../../types';\nimport { getUserName } from '../../helpers/manageUserName';\nimport popupHandler from '../../features/popup';\nimport productListControlsHandler from '../../features/productListControlsHandler';\nimport '../../features/productListInputHandler';\n\nController.fetchUserData()\n  .then(userData => {\n    Render.renderUserCard(userData);\n    return Controller.createQueryConfigs(userData);\n  })\n  .then(configs => {\n    if (configs) {\n      const recipesLoadConfig = configs[0] as ILoadUserRecipes;\n      const articlesLoadConfig = configs[1] as ILoadUserArticles;\n      Controller.loadPageContent(recipesLoadConfig, articlesLoadConfig).then(() => Controller.addListeners());\n    }\n  });\n\ngetUserName();\nburgerMenu();\npopupHandler();\ntabHandler('recipes');\ntabHandler('forms-container');\nproductListControlsHandler();\n","import avatarImage from '../../assets/svg/avatar.svg';\nimport { IUserResponse } from '../../types';\n\nfunction renderUserCard(userData: IUserResponse | undefined) {\n  const container = document.querySelector('.profile') as HTMLElement;\n  container.innerHTML = `\n    <div class=\"profile__general\">\n      <div class=\"profile__avatar\">\n        <img class=\"avatar__img\" src=${avatarImage} alt=\"avatar image\">\n      </div>\n      <h1 class=\"profile__name\">${userData?.name || 'User'}</h1>\n      <span class=\"profile__motto\">I just love cooking and sharing my experience!</span>\n    </div>\n    <div class=\"profile__info\">\n      <div class=\"info__item\">Age: <span id=\"user-age\">28</span></div>\n      <div class=\"info__item\">Location: <span id=\"user-location\">New-York</span></div>\n      <div class=\"info__item\">\n        <div class=\"interests\">Cooking interests:</div> \n        <div class=\"categories\" id=\"fav-categories\">\n          <div class=\"categories__item\">Bakery</div>\n          <div class=\"categories__item\">Vegan</div>\n          <div class=\"categories__item\">Dinner</div>\n          <div class=\"categories__item\">Healthy</div>\n        </div>\n      </div>\n    </div>\n  `;\n\n  return container;\n}\n\nexport { renderUserCard };\n","import { deleteProduct, moveToStockedHandler } from './productHandlerHelpers';\n\nconst productListControlsHandler = (): void => {\n  const addButtonsList = document.querySelectorAll('.product-controls__add-btn');\n  const deleteButtonsList = document.querySelectorAll('.product-controls__delete-btn');\n\n  addButtonsList.forEach(btn => {\n    btn.addEventListener('click', e => moveToStockedHandler(e));\n  });\n\n  deleteButtonsList.forEach(btn => {\n    btn.addEventListener('click', e => deleteProduct(e));\n  });\n};\n\nexport default productListControlsHandler;\n"],"names":["burgerBtn","document","querySelector","menu","menuLinks","querySelectorAll","tabHandler","id","tabNavs","getElementById","tabContents","activeTabName","forEach","element","addEventListener","e","setActiveTab","preventDefault","classList","remove","activeTab","target","contains","closest","tabname","add","getAttribute","async","loadConfig","contentLoadingService","queryOptions","queryStringArray","optionProp","optionValue","Object","entries","push","join","getRecipes","queryString","keys","length","response","fetch","json","getArticles","tagName","classNames","createdElement","createElement","userObject","listName","itemId","saved","find","favorite","renderCards","itemsData","sectionContainerList","containerClass","listClass","itemsCards","map","item","itemIndex","recipeData","size","elemType","dishType","dishTypes","split","word","toUpperCase","slice","calories","Math","round","nutrition","nutrients","amount","cardId","String","cardLink","isInSavedList","isInFavoritesList","cardElementClassNames","concat","cardElement","createElementWithClass","innerHTML","image","title","readyInMinutes","aggregateLikes","summary","renderRecipeCard","largeCardIndex","cardClassList","listElemType","articleData","articleClass","date","Date","postedAt","toLocaleDateString","year","month","day","_id","articleLink","articleElement","renderArticleCard","articleClassList","renderItems","append","cookieKey","cookie","startsWith","setUserName","userName","window","localStorage","textContent","setLocalUser","setItem","JSON","stringify","handleRegistrationForm","event","formElement","formData","formNode","password","value","FormData","serializeRegistrationForm","undefined","status","alert","reset","responseBody","name","handleLoginForm","data","endpoint","method","headers","credentials","body","fromEntries","createQueryConfigs","userData","page","limit","recipes","articles","addListeners","userpageControls","pageContents","control","el","activeContentId","content","showActiveContent","logoutButton","removeItem","open","logOut","addArticleButtonsListeners","addRecipeButtonsListeners","userProfileButton","signupForm","forms","article","handleSaveFavoriteButtonsUser","recipe","cardCategory","saveButton","favoriteButton","targetButton","toggle","updateUserResources","parse","getItem","eventTarget","cardName","filter","resourceId","recipesList","articlesList","container","clearTabsContent","configs","recipesLoadConfig","articlesLoadConfig","renderLoadedSections","rerenderUserItems","emptyRecipesSaved","emptyRecipesFavorite","emptyArticlesSaved","emptyArticlesFavorite","loadCards","closeParentPopup","HTMLElement","deleteProduct","targetProduct","parentList","removeChild","checkIfEmpty","moveToStockedHandler","shoppingList","stockedList","productName","innerText","toLowerCase","trim","stockedProductNameElems","stockedProductNames","elem","includes","list","MOCK_INGREDIENTS","sort","addListenersToUserInput","selectWrapper","inputElem","selectOptionsHolder","dropdownMenu","addedProductsList","parentElement","dropdownProducts","addToList","product","listItem","renderProductOptions","createListItem","key","focus","relevantIngredients","options","toLocaleLowerCase","optionsHolder","addedOptionElems","addedProducts","listElem","tokenValue","getUserData","then","addButtonsList","deleteButtonsList","btn"],"sourceRoot":""}